#!/bin/bash
#
# +--------------------------------------------------------------------------------+
# | Copyright (C) 2014 Kuboosoft                                                   |
# |                                                                                |
# |This program is free software; You can distribute it and / or                   |
# |modify it under the terms of the GNU General Public License                     |
# |as published by the Free Software Foundation; any                               |
# |version 3 of the License, or (optionally) any version                           |
# |later. http://www.gnu.org/licenses/gpl-3.0.html                                 |
# |This program is distributed in the hope that it will be useful,                 |
# |but WITHOUT ANY WARRANTY. See the GNU General Public License                    |
# |for details.                                                                    |
# +--------------------------------------------------------------------------------+
# |This code is designed, written and maintained by David Vasquez    		   |
# |Any questions, comments or advice on this code                                  |
# |should be addressed to:                                                         |
# |https://plus.google.com/communities/118230919321773121406                       |
# +--------------------------------------------------------------------------------+
# FEDORA 20, 21 ADPOST 1.2.2 64 BITS

# +--------------------------------------------------------------------------------------------------+
# |AQUI INICIA EL MENU                                                                               |
# +--------------------------------------------------------------------------------------------------+

source /usr/bin/postinstallerf/pid


cleanlist() {
if [ "$(id -u)" -eq 0 ]; then
rm -f /tmp/addpost..lck
else
cat /dev/null > /tmp/addpost..lck
fi
}


title='Checking installed programs'
body='Please wait'

if [ "$(id -u)" -eq 0 ]; then  
cleanlist
    # Send messages to users listed by the 'users' command, but only once
    # Maybe sh has a better way of doing set operations, but this works:
    SENT=""
    for USER in $(users); do
        case $SENT in
            "$USER") ;;
            *" $USER") ;;
            "$USER "*) ;;
            *" $USER "*) ;;
            # use 'su USER' to send the message
            *) SENT="$SENT $USER"; su $USER -c "notify-send 'Checking installed programs 
Please wait..' -i "/usr/share/icons/pinguino.png" -t 10000" ;;
        esac
    done
else
cleanlist
notify-send "$title" "$body" -i "/usr/share/icons/pinguino.png" -t 10000
fi 
  


    generateInstallMenu(){ 
            im="yad --center --image="/usr/share/icons/acciones/add.png" --image-on-top --class="Install" --window-icon="/usr/share/icons/acciones/add.png" --list --checklist  --width=700 --height=500 --title \"PostInstallerF (Ver 1.5.0)\" --text \"Select items from the list below\" "
            im=$im"--column=\"\" --column \"Application\" --column \"Description\"    --column \"Status\"                           "

 # Building Install Menue

            # Building Install Menue

if [ $(echo $LANG | cut -b1-2) = "es" ]; then

            if ! $installed | grep "Repositorios RPM Fusion" > /dev/null; then
if [ -f /etc/yum.repos.d/rpmfusion-nonfree.repo ]; then
                    im=$im"FALSE \"Repositorios RPM Fusion\"     \"Proporciona un repositorio que se puede acceder usando yum y PackageKit para el software del Proyecto Fedora [Recomendado]\" \"ACTIVADO  \"  "
else
im=$im"FALSE \"Repositorios RPM Fusion\"     \"Proporciona un repositorio que se puede acceder usando yum y PackageKit para el software del Proyecto Fedora [Recomendado]\" \"NO ACTIVADO  \"  "
fi
            fi

if ! $installed | grep "Cambiar lenguaje del sistema" > /dev/null; then
if which system-config-language >/dev/null; then
                    im=$im"FALSE \"Cambiar lenguaje del sistema\"             \"Elige tu lenguaje materno\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Cambiar lenguaje del sistema\"             \"Elige tu lenguaje materno\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Herramientas Básicas de compilación" > /dev/null; then
if which make >/dev/null; then
                    im=$im"FALSE \"Herramientas Básicas de compilación\"                  \"Compila tus programas\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Herramientas Básicas de compilación\"                  \"Compila tus programas\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Mozilla Firefox" > /dev/null; then
if which firefox >/dev/null; then
                    im=$im"FALSE \"Mozilla Firefox\"                  \"Navegador web de mozilla.org\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Mozilla Firefox\"                  \"Navegador web de mozilla.org\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Instalar Codecs Audio/Video" > /dev/null; then
if [ $(rpm -qa gstreamer-plugins-bad | grep -c gstreamer-plugins-bad) -gt 0 ] && [ $(rpm -qa gstreamer-plugins-bad-free-extras | grep -c gstreamer-plugins-bad-free-extras) -gt 0 ] && [ $(rpm -qa gstreamer-plugins-ugly | grep -c gstreamer-plugins-ugly) -gt 0 ]; then
                    im=$im"FALSE \"Instalar Codecs Audio/Video\"      \"Todo lo necesario para reproduccion de audio y video\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Instalar Codecs Audio/Video\"      \"Todo lo necesario para reproduccion de audio y video\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Flash Player" > /dev/null; then
if which flash-player-properties >/dev/null; then
                    im=$im"FALSE \"Flash Player\"           \"Plugin necesario para reproduccion flash del navegador\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Flash Player\"           \"Plugin necesario para reproduccion flash del navegador\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Unrar y p7zip" > /dev/null; then
if which unrar >/dev/null; then
                    im=$im"FALSE \"Unrar y p7zip\"                   \"Descomprime archivos rar y 7zip\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Unrar y p7zip\"                   \"Descomprime archivos rar y 7zip\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Java OpenJDK" > /dev/null; then
if which java >/dev/null; then
                    im=$im"FALSE \"Java OpenJDK\"           \"Ejecucion de archivos o programas escritos en java\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Java OpenJDK\"           \"Ejecucion de archivos o programas escritos en java\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Java JRE Oracle" > /dev/null; then
if [ -f /usr/java/latest/lib/i386/libnpjp2.so ] || [ -f /usr/java/latest/lib64/x86_64/libnpjp2.so ]; then
                    im=$im"FALSE \"Java JRE Oracle\"           \"Implementation propietaria del lenguaje de programacion Java.\" \"INSTALADO [$versionjava] \"  "
else
im=$im"FALSE \"Java JRE Oracle\"           \"Implementation propietaria del lenguaje de programacion Java.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Java JDK Oracle" > /dev/null; then
if [ -f /usr/java/latest/jre/lib/amd64/libnpjp2.so ] || [ -f /usr/java/latest/jre/lib/i386/libnpjp2.so ]; then
                    im=$im"FALSE \"Java JDK Oracle\"     \"Oracle Java Runtime Environment [Desarrolladores]\" \"INSTALADO [$versionjkd]  \"  "
else
im=$im"FALSE \"Java JDK Oracle\"     \"Oracle Java Runtime Environment [Desarrolladores]\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "GIMP" > /dev/null; then
if which gimp >/dev/null; then

                    im=$im"FALSE \"GIMP\"            \"Edición de imágenes digitales en forma de mapa de bits, tanto dibujos como fotografías\" \"INSTALADO  \"  "
else
im=$im"FALSE \"GIMP\"            \"Edición de imágenes digitales en forma de mapa de bits, tanto dibujos como fotografías\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Hugin" > /dev/null; then
if which hugin >/dev/null; then

                    im=$im"FALSE \"Hugin\"            \"Une múltiples imágenes, la imagen resultante puede abarcar 360 grados. Excelentes imágenes panorámicas\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Hugin\"            \"Une múltiples imágenes, la imagen resultante puede abarcar 360 grados. Excelentes imágenes panorámicas.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Converseen" > /dev/null; then
if which converseen >/dev/null; then
                    im=$im"FALSE \"Converseen\"            \"Convertir y cambiar el tamaño de un número ilimitado de imágenes a cualquiera de los formatos más populares: DPX, EXR, GIF, JPEG, JPEG 2000, PDF, PhotoCD, PNG, Postscript, SVG, y TIFF\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Converseen\"            \"Convertir y cambiar el tamaño de un número ilimitado de imágenes a cualquiera de los formatos más populares: DPX, EXR, GIF, JPEG, JPEG 2000, PDF, PhotoCD, PNG, Postscript, SVG, y TIFF\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "MyPaint" > /dev/null; then
if which mypaint >/dev/null; then
                    im=$im"FALSE \"MyPaint\" \"MyPaint es una aplicación de software libre para ilustrar y dibujar con una tableta digitalizadora\" \"INSTALADO  \"  "
else
im=$im"FALSE \"MyPaint\" \"MyPaint es una aplicación de software libre para ilustrar y dibujar con una tableta digitalizadora\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Pinta" > /dev/null; then
if which pinta >/dev/null; then
                    im=$im"FALSE \"Pinta\" \"Pinta es un programa de dibujo libre y de codigo y modelado similar Paint.NET.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Pinta\" \"Pinta es un programa de dibujo libre y de codigo y modelado similar Paint.NET.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Pencil" > /dev/null; then
if which pencil >/dev/null; then
                    im=$im"FALSE \"Pencil\" \"Herramienta opensource para hacer diagramas y prototipos de interfaz gráfica de usuario.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Pencil\" \"Herramienta opensource para hacer diagramas y prototipos de interfaz gráfica de usuario.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Fotoxx" > /dev/null; then
if which fotoxx >/dev/null; then
                    im=$im"FALSE \"Fotoxx\"               \"Edición de fotos y gestión de la colección\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Fotoxx\"               \"Edición de fotos y gestión de la colección\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Shutter" > /dev/null; then
if which shutter >/dev/null; then
                    im=$im"FALSE \"Shutter\"       \"Shutter es un programa con características ricas de captura de pantalla\" \"INSTALADO  \"  "
else
m=$im"FALSE \"Shutter\"       \"Shutter es un programa con características ricas de captura de pantalla\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Glabels" > /dev/null; then
if which glabels >/dev/null; then
                    im=$im"FALSE \"Glabels\"            \"Es un programa para crear etiquetas y tarjetas de visita para el entorno de escritorio GNOME\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Glabels\"            \"Es un programa para crear etiquetas y tarjetas de visita para el entorno de escritorio GNOME\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Kover" > /dev/null; then
if which kover >/dev/null; then
                    im=$im"FALSE \"Kover\"              \"Kover es una aplicación informática libre que permite diseñar e imprimir carátulas de CD\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Kover\"              \"Kover es una aplicación informática libre que permite diseñar e imprimir carátulas de CD\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "LibreOffice" > /dev/null; then
if which libreoffice >/dev/null; then
                    im=$im"FALSE \"LibreOffice\"         \"LibreOffice es la suite de productividad personal de código abierto para GNU/Linux\" \"INSTALADO  \"  "
else
im=$im"FALSE \"LibreOffice\"         \"LibreOffice es la suite de productividad personal de código abierto para GNU/Linux\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Basket" > /dev/null; then
if which basket >/dev/null; then
                    im=$im"FALSE \"Basket\"         \"Organiza tus notas en una jerarquía de canastas, estupendo organizador de notas.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Basket\"         \"Organiza tus notas en una jerarquía de canastas, estupendo organizador de notas.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "ProjectLibre" > /dev/null; then
if which projectlibre >/dev/null; then
                    im=$im"FALSE \"ProjectLibre\"         \"ProjectLibre es la alternativa de código abierto a Microsoft Project.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"ProjectLibre\"         \"ProjectLibre es la alternativa de código abierto a Microsoft Project.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "PDF Mod" > /dev/null; then
if which pdfmod >/dev/null; then
                    im=$im"FALSE \"PDF Mod\"                \"PDF Mod es una sencilla aplicación para la modificación de documentos PDF\" \"INSTALADO  \"  "
else
im=$im"FALSE \"PDF Mod\"                \"PDF Mod es una sencilla aplicación para la modificación de documentos PDF\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "PDF Split and Merge" > /dev/null; then
if which pdfsam >/dev/null; then
                    im=$im"FALSE \"PDF Split and Merge\"                \"Herramienta fácil de usar para combinar y dividir documentos en formato pdf\" \"INSTALADO  \"  "
else
im=$im"FALSE \"PDF Split and Merge\"                \"Herramienta fácil de usar para combinar y dividir documentos en formato pdf\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Scribus" > /dev/null; then
if which scribus >/dev/null; then
                    im=$im"FALSE \"Scribus\"               \"Scribus es un programa de maquetación de páginas de código abierto\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Scribus\"               \"Scribus es un programa de maquetación de páginas de código abierto\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Gnome dia" > /dev/null; then
if which dia >/dev/null; then
                    im=$im"FALSE \"Gnome dia\"                   \"Dia es más o menos inspirado en el programa comercial de Windows Visio\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Gnome dia\"                   \"Dia es más o menos inspirado en el programa comercial de Windows Visio\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Gnumeric" > /dev/null; then
if which gnumeric >/dev/null; then
                    im=$im"FALSE \"Gnumeric\"                 \"Gnumeric es una hoja de cálculo libre que forma parte del entorno de escritorio GNOME\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Gnumeric\"                 \"Gnumeric es una hoja de cálculo libre que forma parte del entorno de escritorio GNOME\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Planner" > /dev/null; then
if which planner >/dev/null; then
                    im=$im"FALSE \"Planner\"            \"Planner es la mejor herramienta de creacion y gestión de proyectos, una alternativa a Microsoft Project\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Planner\"            \"Planner es la mejor herramienta de creacion y gestión de proyectos, una alternativa a Microsoft Project\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "VYM" > /dev/null; then
if which vym >/dev/null; then
                    im=$im"FALSE \"VYM\"                   \"(Ver su mente) es una herramienta para generar y manipular mapas que muestran sus pensamientos,conocidos como mapa mentales\" \"INSTALADO  \"  "
else
im=$im"FALSE \"VYM\"                   \"(Ver su mente) es una herramienta para generar y manipular mapas que muestran sus pensamientos,conocidos como mapa mentales\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Freemind" > /dev/null; then
if which freemind >/dev/null; then
                    im=$im"FALSE \"Freemind\"             \"Un programa premier para crear mapas mentales, hecho en java\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Freemind\"             \"Un programa premier para crear mapas mentales, hecho en java\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "yEd" > /dev/null; then
if which yEd >/dev/null; then
                    im=$im"FALSE \"yEd\"             \"Aplicación de escritorio potente que puede usarse para generar de forma rápida y eficaz diagramas de alta calidad.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"yEd\"             \"Aplicación de escritorio potente que puede usarse para generar de forma rápida y eficaz diagramas de alta calidad.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Cmap Tools" > /dev/null; then
if which cmaptools >/dev/null; then
                    im=$im"FALSE \"Cmap Tools\"             \"Construir, navegar, compartir y criticar modelos de conocimiento representados como mapas conceptuales.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Cmap Tools\"             \"Construir, navegar, compartir y criticar modelos de conocimiento representados como mapas conceptuales.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Anki" > /dev/null; then
if which anki >/dev/null; then
                    im=$im"FALSE \"Anki\"                \"Programa que hace recordar las cosas fáciles. Debido a que es mucho más eficiente que los métodos tradicionales de estudio.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Anki\"                \"Programa que hace recordar las cosas fáciles. Debido a que es mucho más eficiente que los métodos tradicionales de estudio.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Wine y winetricks" > /dev/null; then
if which wine >/dev/null; then
                    im=$im"FALSE \"Wine y winetricks\"                  \"Instala algunas aplicaciones de windows\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Wine y winetricks\"                  \"Instala algunas aplicaciones de windows\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Oracle Virtual Box" > /dev/null; then
if [ -f '/etc/yum.repos.d/virtualbox.repo' ] && [ -f /usr/bin/VirtualBox ]; then
                    im=$im"FALSE \"Oracle Virtual Box\"            \"Software de virtualización para arquitecturas x86/amd64\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Oracle Virtual Box\"            \"Software de virtualización para arquitecturas x86/amd64\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "PlayOnLinux" > /dev/null; then
if which playonlinux >/dev/null; then
                    im=$im"FALSE \"PlayOnLinux\"                \"Programa que nos permite instalar y usar fácilmente numerosos juegos y programas para Windows®\" \"INSTALADO  \"  "
else
im=$im"FALSE \"PlayOnLinux\"                \"Programa que nos permite instalar y usar fácilmente numerosos juegos y programas para Windows®\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "TeamViewer" > /dev/null; then
if which teamviewer >/dev/null; then
                    im=$im"FALSE \"TeamViewer\"                  \"La solución All-In-One para el acceso remoto y la asistencia a través de internet\" \"INSTALADO  \"  "
else
im=$im"FALSE \"TeamViewer\"                  \"La solución All-In-One para el acceso remoto y la asistencia a través de internet\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "DropBox" > /dev/null; then
if which dropbox >/dev/null; then
                    im=$im"FALSE \"DropBox\"                    \"Dropbox es un servicio de alojamiento de archivos multiplataforma en la nube, operado por la compañía Dropbox\" \"INSTALADO  \"  "
else
im=$im"FALSE \"DropBox\"                    \"Dropbox es un servicio de alojamiento de archivos multiplataforma en la nube, operado por la compañía Dropbox\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Miro Video Converter" > /dev/null; then
if which miro-video-converter.py >/dev/null; then
                    im=$im"FALSE \"Miro Video Converter\"                   \"Conversion de videos desde y hacia diferentes formatos, incluyendo formatos para dispositivos como teléfonos Android.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Miro Video Converter\"                   \"Conversion de videos desde y hacia diferentes formatos, incluyendo formatos para dispositivos como teléfonos Android.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Qwinff" > /dev/null; then
if which qwinff >/dev/null; then
                    im=$im"FALSE \"Qwinff\"                   \"QWinFF es un multiplataforma, y fácil de usar convertidor de medios frontend de FFmpeg.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Qwinff\"                   \"QWinFF es un multiplataforma, y fácil de usar convertidor de medios frontend de FFmpeg.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Transcoder" > /dev/null; then
if which transcoder >/dev/null; then
                    im=$im"FALSE \"Transcoder\"                \"Simple conversion de video y audio\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Transcoder\"                \"Simple conversion de video y audio\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Mobilmedia Converter" > /dev/null; then
if which mmc >/dev/null; then
                    im=$im"FALSE \"Mobilmedia Converter\"                  \"Conversion de video para dispositivos\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Mobilmedia Converter\"                  \"Conversion de video para dispositivos\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "GtkPod" > /dev/null; then
if which gtkpod >/dev/null; then
                    im=$im"FALSE \"GtkPod\"             \"Interfaz gráfica de usuario para el iPod de Apple\" \"INSTALADO  \"  "
else
im=$im"FALSE \"GtkPod\"             \"Interfaz gráfica de usuario para el iPod de Apple\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "EasyTag" > /dev/null; then
if which easytag >/dev/null; then
                    im=$im"FALSE \"EasyTag\"              \"EasyTAG es una utilidad para ver y editar las etiquetas para archivos MP3, MP2, MP4/AAC, FLAC, Ogg Vorbis, MusePack, Monkey Audio y WavPack archivos\" \"INSTALADO  \"  "
else
im=$im"FALSE \"EasyTag\"              \"EasyTAG es una utilidad para ver y editar las etiquetas para archivos MP3, MP2, MP4/AAC, FLAC, Ogg Vorbis, MusePack, Monkey Audio y WavPack archivos\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Avidemux" > /dev/null; then
if which avidemux >/dev/null; then
                    im=$im"FALSE \"Avidemux\"       \"Avidemux es un editor de vídeo gratuito diseñado para corte simple, filtrado y codificación de tareas\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Avidemux\"       \"Avidemux es un editor de vídeo gratuito diseñado para corte simple, filtrado y codificación de tareas\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Blender" > /dev/null; then
if which blender >/dev/null; then
                    im=$im"FALSE \"Blender\"               \"Programa de modelado, animación y creación de gráficos tridimensionales\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Blender\"               \"Programa de modelado, animación y creación de gráficos tridimensionales\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Tupi" > /dev/null; then
if which tupi >/dev/null; then
                    im=$im"FALSE \"Tupi\"               \"Herramienta de diseño y autoría, para los artistas digitales interesados ​​en animación 2D.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Tupi\"               \"Herramienta de diseño y autoría, para los artistas digitales interesados ​​en animación 2D.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "BRL-CAD" > /dev/null; then
if which brlcad-config >/dev/null; then
                    im=$im"FALSE \"BRL-CAD\"    \"BRL-CAD es un programa libre, de código abierto alternativo a AutoCAD, desarrollado por los militares de USA en colaboración con la NASA\" \"INSTALADO  \"  "
else
im=$im"FALSE \"BRL-CAD\"    \"BRL-CAD es un programa libre, de código abierto alternativo a AutoCAD, desarrollado por los militares de USA en colaboración con la NASA\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Sweet Home 3D" > /dev/null; then
if [ -f /usr/share/applications/SweetHome3D.desktop ] && [ -f /usr/bin/sweethome3d.sh ]; then
                    im=$im"FALSE \"Sweet Home 3D\"          \"Sweet Home 3D es una aplicación libre de diseño de interiores que le ayuda a colocar sus muebles sobre un plano de una casa en 2D, con una vista previa en 3D\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Sweet Home 3D\"          \"Sweet Home 3D es una aplicación libre de diseño de interiores que le ayuda a colocar sus muebles sobre un plano de una casa en 2D, con una vista previa en 3D\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Libre CAD" > /dev/null; then
if which librecad >/dev/null; then
                    im=$im"FALSE \"Libre CAD\"    \"LibreCAD es un libre de código abierto aplicación de CAD\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Libre CAD\"    \"LibreCAD es un libre de código abierto aplicación de CAD\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "FreeCAD" > /dev/null; then
if which FreeCAD >/dev/null; then
                    im=$im"FALSE \"FreeCAD\"    \"FreeCAD es un propósito general 3D CAD, MCAD, CAx, CAE y PLM modelador.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"FreeCAD\"    \"FreeCAD es un propósito general 3D CAD, MCAD, CAx, CAE y PLM modelador.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "DraftSight" > /dev/null; then
if which draftsight >/dev/null; then
                    im=$im"FALSE \"DraftSight\"    \"DraftSight es un programa libre de la aplicación CAD 2D que te permite crear, editar y visualizar sus archivos DWG / DXF\" \"INSTALADO  \"  "
else
im=$im"FALSE \"DraftSight\"    \"DraftSight es un programa libre de la aplicación CAD 2D que te permite crear, editar y visualizar sus archivos DWG / DXF\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Inkscape" > /dev/null; then
if which inkscape >/dev/null; then
                    im=$im"FALSE \"Inkscape\"                 \"Editor de Gráficos Vectoriales, similar al Adobe Illustrator, que busca ser compatible con SVG, de código abierto\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Inkscape\"                 \"Editor de Gráficos Vectoriales, similar al Adobe Illustrator, que busca ser compatible con SVG, de código abierto\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Openshot" > /dev/null; then
if which openshot >/dev/null; then
                    im=$im"FALSE \"Openshot\"    \"Un simple, potente y gratuito editor de vídeo con un enfoque en la facilidad de uso\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Openshot\"    \"Un simple, potente y gratuito editor de vídeo con un enfoque en la facilidad de uso\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Kdenlive" > /dev/null; then
if which kdenlive >/dev/null; then
                    im=$im"FALSE \"Kdenlive\"    \"Intuitivo y poderoso editor de video multi-pista, incluye las tecnologías de vídeo más recientes.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Kdenlive\"    \"Intuitivo y poderoso editor de video multi-pista, incluye las tecnologías de vídeo más recientes.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "LIVES" > /dev/null; then
if which lives >/dev/null; then
                    im=$im"FALSE \"LIVES\"    \"Programa de edición de video y VJ software para Linux\" \"INSTALADO  \"  "
else
im=$im"FALSE \"LIVES\"    \"Programa de edición de video y VJ software para Linux\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Imagination" > /dev/null; then
if which imagination >/dev/null; then
                    im=$im"FALSE \"Imagination\"    \"Ligero creador de diapositivas para DVD\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Imagination\"    \"Ligero creador de diapositivas para DVD\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "DeveDe" > /dev/null; then
if which devede >/dev/null; then
                    im=$im"FALSE \"DeveDe\"    \"Programa que permite crear video DVDs y CDs, aptos para un reproductor doméstico\" \"INSTALADO  \"  "
else
im=$im"FALSE \"DeveDe\"    \"Programa que permite crear video DVDs y CDs, aptos para un reproductor doméstico\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "DVDStyler" > /dev/null; then
if which dvdstyler >/dev/null; then
                    im=$im"FALSE \"DVDStyler\"    \"Crea menús de DVDs a tu gusto\" \"INSTALADO  \"  "
else
im=$im"FALSE \"DVDStyler\"    \"Crea menús de DVDs a tu gusto\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "ffDiaporama" > /dev/null; then
if which ffdiaporama >/dev/null; then
                    im=$im"FALSE \"ffDiaporama\"    \"Aplicación para la creación de secuencias de videos\" \"INSTALADO  \"  "
else
im=$im"FALSE \"ffDiaporama\"    \"Aplicación para la creación de secuencias de videos\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Wink" > /dev/null; then
if which wink >/dev/null; then
                    im=$im"FALSE \"Wink\"    \"Software de creación de Tutoriales y Presentaciones, dirigido principalmente a la creación de videotutoriales\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Wink\"    \"Software de creación de Tutoriales y Presentaciones, dirigido principalmente a la creación de videotutoriales\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Virtual Lighttable and Darkroom" > /dev/null; then
if which darktable >/dev/null; then
                    im=$im"FALSE \"Virtual Lighttable and Darkroom\"    \"Es una aplicacion de flujo de trabajo y el revelador RAW para fotógrafos. Un lighttable virtual y cuarto oscuro para los fotógrafos\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Virtual Lighttable and Darkroom\"    \"Es una aplicacion de flujo de trabajo y el revelador RAW para fotógrafos. Un lighttable virtual y cuarto oscuro para los fotógrafos\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Gnome Subtitles" > /dev/null; then
if which gnome-subtitles >/dev/null; then
                    im=$im"FALSE \"Gnome Subtitles\"    \"Un editor de subtítulos para el escritorio GNOME\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Gnome Subtitles\"    \"Un editor de subtítulos para el escritorio GNOME\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "VLC media player" > /dev/null; then
if which vlc >/dev/null; then
                    im=$im"FALSE \"VLC media player\"    \"Potente reproductor multimedia y servidor de streaming\" \"INSTALADO  \"  "
else
im=$im"FALSE \"VLC media player\"    \"Potente reproductor multimedia y servidor de streaming\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Pipelight" > /dev/null; then
if which pipelight-plugin >/dev/null; then
                    im=$im"FALSE \"Pipelight\"    \"Pipelight es un plugin para el navegador que permite usar plugins como Silverlight dentro de los navegadores de Linux.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Pipelight\"    \"Pipelight es un plugin para el navegador que permite usar plugins como Silverlight dentro de los navegadores de Linux.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "XBMC" > /dev/null; then
if which xbmc >/dev/null; then
                    im=$im"FALSE \"XBMC\"    \"Completo centro multimedia de entretenimiento para Linux.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"XBMC\"    \"Completo centro multimedia de entretenimiento para Linux.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Clementine" > /dev/null; then
if which clementine >/dev/null; then
                    im=$im"FALSE \"Clementine\"    \"Reproductor musical multiplataforma. Está inspirado en Amarok\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Clementine\"    \"Reproductor musical multiplataforma. Está inspirado en Amarok\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Spotify" > /dev/null; then
if which spotify >/dev/null; then
                    im=$im"FALSE \"Spotify\"    \"Spotify es una aplicación empleada para la reproducción de musica vía streaming\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Spotify\"    \"Reproductor musical multiplataforma. Está inspirado en Amarok\" \"NO INSTALADO  \"  "
fi
            fi
 
if ! $installed | grep "Sound converter" > /dev/null; then
if which soundconverter >/dev/null; then
                    im=$im"FALSE \"Sound converter\"    \"SoundConverter es el convertidor de archivos de audio principal para el escritorio GNOME\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Sound converter\"    \"SoundConverter es el convertidor de archivos de audio principal para el escritorio GNOME\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Audacity" > /dev/null; then
if which audacity >/dev/null; then
                    im=$im"FALSE \"Audacity\"    \"Un editor de audio y grabador de Linux gratuito y fácil de usar\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Audacity\"    \"Un editor de audio y grabador de Linux gratuito y fácil de usar\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "OcenAudio" > /dev/null; then
if which ocenaudio >/dev/null; then
                    im=$im"FALSE \"OcenAudio\"    \"Programa multiplataforma de edicion de audio rápido, funcional y fácil de usar.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"OcenAudio\"    \"Programa multiplataforma de edicion de audio rápido, funcional y fácil de usar.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Mixxx" > /dev/null; then
if which mixxx >/dev/null; then
                    im=$im"FALSE \"Mixxx\"    \"Mixxx tiene todo lo necesario para empezar a hacer mezclas de DJ con un ajustado paquete integrado.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Mixxx\"    \"Mixxx tiene todo lo necesario para empezar a hacer mezclas de DJ con un ajustado paquete integrado.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "SKYPE" > /dev/null; then
if which skype >/dev/null; then
                    im=$im"FALSE \"SKYPE\"    \"Te brinda la facilidad de llamar barato o de hacer llamadas gratis entre usuarios de Skype\" \"INSTALADO  \"  "
else
im=$im"FALSE \"SKYPE\"    \"Te brinda la facilidad de llamar barato o de hacer llamadas gratis entre usuarios de Skype\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Turpial" > /dev/null; then
if which turpial >/dev/null; then
                    im=$im"FALSE \"Turpial\"    \"Cliente alternativo para la red Twitter con múltiples interfaces\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Turpial\"    \"Cliente alternativo para la red Twitter con múltiples interfaces\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Gwibber" > /dev/null; then
if which gwibber >/dev/null; then
                    im=$im"FALSE \"Gwibber\"    \"Cliente de microblogging para el entorno de escritorio GNOME\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Gwibber\"    \"Cliente de microblogging para el entorno de escritorio GNOME\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Bible Time" > /dev/null; then
if which bibletime >/dev/null; then
                    im=$im"FALSE \"Bible Time\"    \"Biblia para Linux\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Bible Time\"    \"Biblia para Linux\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Tuxpaint" > /dev/null; then
if which tuxpaint >/dev/null; then
                    im=$im"FALSE \"Tuxpaint\"    \"Programa de diseño gratuito para niños de 3 años y más\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Tuxpaint\"    \"Programa de diseño gratuito para niños de 3 años y más\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Stellarium" > /dev/null; then
if which stellarium >/dev/null; then
                    im=$im"FALSE \"Stellarium\"    \"Programa planetario, muestra un cielo realista en 3D tal como se aprecia a simple vista, con binoculares o telescopio\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Stellarium\"    \"Programa planetario, muestra un cielo realista en 3D tal como se aprecia a simple vista, con binoculares o telescopio\" \"INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Celestia" > /dev/null; then
if which celestia >/dev/null; then
                    im=$im"FALSE \"Celestia\"    \"Simulación de espacio visual de tiempo real OpenGL\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Celestia\"    \"Simulación de espacio visual de tiempo real OpenGL\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Gcompris" > /dev/null; then
if which gcompris >/dev/null; then
                    im=$im"FALSE \"Gcompris\"    \"GCompris es un programa de cómputo educacional con diferentes actividades para niños entre 2 y 10 años de edad\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Gcompris\"    \"GCompris es un programa de cómputo educacional con diferentes actividades para niños entre 2 y 10 años de edad\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "TuxMath" > /dev/null; then
if which tuxmath >/dev/null; then
                    im=$im"FALSE \"TuxMath\"    \"Tutor de escritura con un juego de arcade\" \"INSTALADO  \"  "
else
im=$im"FALSE \"TuxMath\"    \"Tutor de escritura con un juego de arcade\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "TuxType" > /dev/null; then
if which tuxtype >/dev/null; then
                    im=$im"FALSE \"TuxType\"    \"Simulación de espacio visual de tiempo real OpenGL\" \"INSTALADO  \"  "
else
im=$im"FALSE \"TuxType\"    \"Simulación de espacio visual de tiempo real OpenGL\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Childsplay" > /dev/null; then
if which childsplay >/dev/null; then
                    im=$im"FALSE \"Childsplay\"    \"Excelente paquete de juegos educativos para niños\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Childsplay\"    \"Excelente paquete de juegos educativos para niños\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Scratch" > /dev/null; then
if which scratch >/dev/null; then
                    im=$im"FALSE \"Scratch\"    \"Lenguaje de programación para todo el mundo. Crear historias interactivas, juegos, música y arte\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Scratch\"    \"Lenguaje de programación para todo el mundo. Crear historias interactivas, juegos, música y arte\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Ri-li" > /dev/null; then
if which Ri_li >/dev/null; then
                    im=$im"FALSE \"Ri-li\"    \"Juego para niños, Usted conduce un motor de madera de juguete en muchos niveles y tienes que recoger todos los vagones para ganar\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Ri-li\"    \"Juego para niños, Usted conduce un motor de madera de juguete en muchos niveles y tienes que recoger todos los vagones para ganar\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Frozen Bubble" > /dev/null; then
if which frozen-bubble >/dev/null; then
                    im=$im"FALSE \"Frozen Bubble\"    \"Videojuego de puzzles inspirado en Puzzle Bobble\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Frozen Bubble\"    \"Videojuego de puzzles inspirado en Puzzle Bobble\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Extreme Tux Racer" > /dev/null; then
if which etracer >/dev/null; then
                    im=$im"FALSE \"Extreme Tux Racer\"    \"Un proyecto de código abierto en el que el usuario toma la forma de Tux y las carreras de descenso a través de senderos alpinos\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Extreme Tux Racer\"    \"Un proyecto de código abierto en el que el usuario toma la forma de Tux y las carreras de descenso a través de senderos alpinos\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Super Tux Kart" > /dev/null; then
if which supertuxkart >/dev/null; then
                    im=$im"FALSE \"Super Tux Kart\"    \"Juego libre y gratuito de carreras de coches tipo arcade en 3D, cuyo protagonista es Tux\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Super Tux Kart\"    \"Juego libre y gratuito de carreras de coches tipo arcade en 3D, cuyo protagonista es Tux\" \"NO INSTALADO  \"  "
fi
            fi



if ! $installed | grep "Wormux" > /dev/null; then
if which wormux >/dev/null; then
                    im=$im"FALSE \"Wormux\"    \"Juego de asesinato en masa 2D\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Wormux\"    \"Juego de asesinato en masa 2D\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Tremulous" > /dev/null; then
if which tremded >/dev/null; then
                    im=$im"FALSE \"Tremulous\"    \"Juego de disparos en primera persona, usando el motor de Quake 3\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Tremulous\"    \"Juego de disparos en primera persona, usando el motor de Quake 3\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Super Methane Brothers" > /dev/null; then
if which methane >/dev/null; then
                    im=$im"FALSE \"Super Methane Brothers\"    \"Juego de plataforma 2D\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Super Methane Brothers\"    \"Juego de plataforma 2D\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Pingus" > /dev/null; then
if which pingus >/dev/null; then
                    im=$im"FALSE \"Pingus\"    \"Juego donde se guía a los pingüinos con seguridad a casa antes de caer en el precipicio\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Pingus\"    \"Juego donde se guía a los pingüinos con seguridad a casa antes de caer en el precipicio\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Hedgewars" > /dev/null; then
if which hedgewars >/dev/null; then
                    im=$im"FALSE \"Hedgewars\"    \"Juego de batalla de tanques 2D donde los tanques son remplazados por erizos\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Hedgewars\"    \"Juego de batalla de tanques 2D donde los tanques son remplazados por erizos\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Glaxium" > /dev/null; then
if which glaxium >/dev/null; then
                    im=$im"FALSE \"Glaxium\"    \"Juego OpenGL de disparos en el espacio\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Glaxium\"    \"Juego OpenGL de disparos en el espacio\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Amoebax" > /dev/null; then
if which amoebax >/dev/null; then
                    im=$im"FALSE \"Amoebax\"    \"Juego rompecabezas de acción\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Amoebax\"    \"Juego rompecabezas de acción\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Alien Arena" > /dev/null; then
if which alienarena >/dev/null; then
                    im=$im"FALSE \"Alien Arena\"    \"Juego de ciencia ficción retro de partida a muerte multijugador\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Alien Arena\"    \"Juego de ciencia ficción retro de partida a muerte multijugador\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "TORCS" > /dev/null; then
if which torcs >/dev/null; then
                    im=$im"FALSE \"TORCS\"    \"Simulador abierto de carrera de autos\" \"INSTALADO  \"  "
else
im=$im"FALSE \"TORCS\"    \"Simulador abierto de carrera de autos\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "FlightGear" > /dev/null; then
if which fgfs >/dev/null; then
                    im=$im"FALSE \"FlightGear\"    \"Simulador de vuelo 3D\" \"INSTALADO  \"  "
else
im=$im"FALSE \"FlightGear\"    \"Simulador de vuelo 3D\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Performous" > /dev/null; then
if which performous >/dev/null; then
                    im=$im"FALSE \"Performous\"    \"Un juego abierto de karaoke, banda y baile en el que uno o más jugadores interpretan una canción, con los scores de sus actuaciones.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Performous\"    \"Un juego abierto de karaoke, banda y baile en el que uno o más jugadores interpretan una canción, con los scores de sus actuaciones.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Steam" > /dev/null; then
if which steam >/dev/null; then
                    im=$im"FALSE \"Steam\"    \"Ofrece una gama de juegos directamente al escritorio del ordenador.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Steam\"    \"Ofrece una gama de juegos directamente al escritorio del ordenador.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Gtk-Gnutella" > /dev/null; then
if which gtk-gnutella >/dev/null; then
                    im=$im"FALSE \"Gtk-Gnutella\"    \"Programa P2P clónico de Gnutella (frostwire)\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Gtk-Gnutella\"    \"Programa P2P clónico de Gnutella (frostwire)\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "GrooveOff" > /dev/null; then
if which grooveoff >/dev/null; then
                    im=$im"FALSE \"GrooveOff\"    \"Cliente no oficial para grooveshark.com.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"GrooveOff\"    \"Cliente no oficial para grooveshark.com.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Frostwire" > /dev/null; then
if which frostwire >/dev/null; then
                    im=$im"FALSE \"Frostwire\"    \"FrostWire es un cliente P2P de código abierto compatible con la red Gnutella.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Frostwire\"    \"FrostWire es un cliente P2P de código abierto compatible con la red Gnutella.\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "UGET" > /dev/null; then
if which uget-gtk >/dev/null; then
                    im=$im"FALSE \"UGET\"    \"Uget (antes urlgfe) es un gestor de descargas escrito en GTK +, fácil de usar, reanudar, clasificar descargar, y más\" \"INSTALADO  \"  "
else
im=$im"FALSE \"UGET\"    \"Uget (antes urlgfe) es un gestor de descargas escrito en GTK +, fácil de usar, reanudar, clasificar descargar, y más\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Yum Extender" > /dev/null; then
if which yumex >/dev/null; then
                    im=$im"FALSE \"Yum Extender\"    \"Una GUI para el gestor de paquetes yum\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Yum Extender\"    \"Una GUI para el gestor de paquetes yum\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Blueman" > /dev/null; then
if which blueman-manager >/dev/null; then
                    im=$im"FALSE \"Blueman\"    \"Todas las funciones de GTK Bluetooth Manager para GNOME\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Blueman\"    \"Todas las funciones de GTK Bluetooth Manager para GNOME\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Google-Chrome" > /dev/null; then
if which google-chrome >/dev/null; then
                    im=$im"FALSE \"Google-Chrome\"    \"Navegador minimalista que hacer la web más rápido, más seguro y más fácil\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Google-Chrome\"    \"Navegador minimalista que hacer la web más rápido, más seguro y más fácil\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Chromium" > /dev/null; then
if which chromium-browser >/dev/null; then
                    im=$im"FALSE \"Chromium\"    \"Navegador de código abierto que pretende construir una forma más segura, más rápida y más estable para todos los usuarios de Internet\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Chromium\"    \"Navegador de código abierto que pretende construir una forma más segura, más rápida y más estable para todos los usuarios de Internet\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Opera" > /dev/null; then
if which opera >/dev/null; then
                    im=$im"FALSE \"Opera\"    \"Excelente navegador que hace que la Web sea rápida y divertida, que le de una experiencia de web en cualquier computador\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Opera\"    \"Excelente navegador que hace que la Web sea rápida y divertida, que le de una experiencia de web en cualquier computador\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "BleachBit" > /dev/null; then
if which bleachbit >/dev/null; then
                    im=$im"FALSE \"BleachBit\"    \"Programa para limpiar espacio en disco, mantener la privacidad\" \"INSTALADO  \"  "
else
im=$im"FALSE \"BleachBit\"    \"Programa para limpiar espacio en disco, mantener la privacidad\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "GnomeTweakTool y dconf-editor" > /dev/null; then
if which gnome-tweak-tool >/dev/null; then
                    im=$im"FALSE \"GnomeTweakTool y dconf-editor\"    \"Herramientas avanzadas para personalizar las opciones de GNOME 3\" \"INSTALADO  \"  "
else
im=$im"FALSE \"GnomeTweakTool y dconf-editor\"    \"Herramientas avanzadas para personalizar las opciones de GNOME 3\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Menu Libre" > /dev/null; then
if which menulibre >/dev/null; then
                    im=$im"FALSE \"Menu Libre\"    \"Un editor de menú avanzado que proporciona características modernas en una interfaz limpia y fácil de usar.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Menu Libre\"    \"Un editor de menú avanzado que proporciona características modernas en una interfaz limpia y fácil de usar.\" \"NO INSTALADO  \"  "
fi
            fi





if ! $installed | grep "Bitdefender" > /dev/null; then
if [ -f /opt/BitDefender-scanner/bin/bdgui ] || [ -f /opt/BitDefender-scanner/bin/bdscan ]; then
                    im=$im"FALSE \"Bitdefender\"    \"Antivirus para particiones ntsf etc\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Bitdefender\"    \"Antivirus para particiones ntsf etc\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Informacion del Sistema" > /dev/null; then
                    im=$im"FALSE \"Informacion del Sistema\"    \"Muestra la informacion del sistema\" \"ACTIVO  \"  "
            fi


if ! $installed | grep "I-nex" > /dev/null; then
if which i-nex >/dev/null; then
                    im=$im"FALSE \"I-nex\"    \"Muestra información sobre el hardware del sistema y el sistema operativo\" \"INSTALADO  \"  "
else
im=$im"FALSE \"I-nex\"    \"Muestra información sobre el hardware del sistema y el sistema operativo\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Alien" > /dev/null; then
if which alien >/dev/null; then
                    im=$im"FALSE \"Alien\"    \"Alien nos permite convertir entre diferentes formatos de paquetes binarios linux, pudiendo pasar entre sí cualquiera de estos 4 formatos: deb, rpm, slackware tgz\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Alien\"    \"Alien nos permite convertir entre diferentes formatos de paquetes binarios linux, pudiendo pasar entre sí cualquiera de estos 4 formatos: deb, rpm, slackware tgz\" \"NO INSTALADO  \"  "
fi
            fi


if ! $installed | grep "Microsoft TrueType core fonts" > /dev/null; then
if [ -d /usr/share/fonts/msttcorefonts ]; then
                    im=$im"FALSE \"Microsoft TrueType core fonts\"    \"Tipografias o letras oficiales de Microsoft\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Microsoft TrueType core fonts\"    \"Tipografias o letras oficiales de Microsoft\" \"NO INSTALADO  \"  "
fi
            fi


   else
# AQUI EMPIESA LENGUAJE INGLES

if ! $installed | grep "Repositories RPM Fusion" > /dev/null; then
if [ -f /etc/yum.repos.d/rpmfusion-nonfree.repo ]; then
                    im=$im"FALSE \"Repositories RPM Fusion\"     \"RPM Fusion provides software that the Fedora Project or Red Hat doesn't want to ship.[Recommended]\" \"ACTIVATED  \"  "
else
im=$im"FALSE \"Repositories RPM Fusion\"     \"RPM Fusion provides software that the Fedora Project or Red Hat doesn't want to ship.[Recommended]\" \"NO ACTIVATED  \"  "
fi
            fi

if ! $installed | grep "Change system language" > /dev/null; then
if which system-config-language >/dev/null; then
                    im=$im"FALSE \"Change system language\"             \"Choose your native language\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Change system language\"             \"Choose your native language\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Build Basic Tools" > /dev/null; then
if which make >/dev/null; then

                    im=$im"FALSE \"Build Basic Tools\"                  \"Dependencies for compiling programs\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Build Basic Tools\"                  \"Dependencies for compiling programs\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Mozilla Firefox" > /dev/null; then
if which firefox >/dev/null; then

                    im=$im"FALSE \"Mozilla Firefox\"                  \"Standalone web browser from mozilla.org\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Mozilla Firefox\"                  \"Standalone web browser from mozilla.org\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Install Codecs Audio/Video" > /dev/null; then
if [ $(rpm -qa gstreamer-plugins-bad | grep -c gstreamer-plugins-bad) -gt 0 ] && [ $(rpm -qa gstreamer-plugins-bad-free-extras | grep -c gstreamer-plugins-bad-free-extras) -gt 0 ] && [ $(rpm -qa gstreamer-plugins-ugly | grep -c gstreamer-plugins-ugly) -gt 0 ]; then
                    im=$im"FALSE \"Install Codecs Audio/Video\"      \"Everything you need for audio and video play\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Install Codecs Audio/Video\"      \"Everything you need for audio and video play\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Flash Player" > /dev/null; then
if which flash-player-properties >/dev/null; then
                    im=$im"FALSE \"Flash Player\"           \"Plugin needed to run flash content in the browser\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Flash Player\"           \"Plugin needed to run flash content in the browser\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Unrar and p7zip" > /dev/null; then
if which unrar >/dev/null; then
                    im=$im"FALSE \"Unrar and p7zip\"                   \"Decompresses rar and 7zip files\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Unrar y p7zip\"                   \"Decompresses rar and 7zip files\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Java OpenJDK" > /dev/null; then
if which java >/dev/null; then
                    im=$im"FALSE \"Java OpenJDK\"           \"Free and open source implementation of the Java programming language.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Java OpenJDK\"           \"Free and open source implementation of the Java programming language.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Java JRE Oracle" > /dev/null; then

if [ -f /usr/java/latest/lib/i386/libnpjp2.so ] || [ -f /usr/java/latest/lib64/x86_64/libnpjp2.so ]; then
                    im=$im"FALSE \"Java JRE Oracle\"           \"Propietary implementation of the Java programming language.\" \"INSTALLED [$versionjava] \"  "
else
im=$im"FALSE \"Java JRE Oracle\"           \"Propietary implementation of the Java programming language.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Java JDK Oracle" > /dev/null; then

if [ -f /usr/java/latest/jre/lib/amd64/libnpjp2.so ] || [ -f /usr/java/latest/jre/lib/i386/libnpjp2.so ]; then
                    im=$im"FALSE \"Java JDK Oracle\"     \"Oracle Java Runtime Environment [Developer]\" \"INSTALLED [$versionjkd]  \"  "
else
im=$im"FALSE \"Java JDK Oracle\"     \"Oracle Java Runtime Environment [Developer]\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "GIMP" > /dev/null; then
if which gimp >/dev/null; then

                    im=$im"FALSE \"GIMP\"            \"GIMP is the GNU Image Manipulation Program.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"GIMP\"            \"GIMP is the GNU Image Manipulation Program.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Hugin" > /dev/null; then
if which hugin >/dev/null; then
 
                    im=$im"FALSE \"Hugin\"            \"Assemble a mosaic of photographs into a complete immersive panorama.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Hugin\"            \"Assemble a mosaic of photographs into a complete immersive panorama.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Converseen" > /dev/null; then
if which converseen >/dev/null; then
                    im=$im"FALSE \"Converseen\"            \"Open source batch image resizer and conversion tool written with Qt4 and ImageMagick.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Converseen\"            \"Open source batch image resizer and conversion tool written with Qt4 and ImageMagick.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "MyPaint" > /dev/null; then
if which mypaint >/dev/null; then
                    im=$im"FALSE \"MyPaint\" \"Fast and easy open-source graphics application for digital painters.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"MyPaint\" \"Fast and easy open-source graphics application for digital painters.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Pinta" > /dev/null; then
if which pinta >/dev/null; then
                    im=$im"FALSE \"Pinta\" \"Drawing/editing program modeled after Paint.NET.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Pinta\" \"drawing/editing program modeled after Paint.NET.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Pencil" > /dev/null; then
if which pencil >/dev/null; then
                    im=$im"FALSE \"Pencil\" \"Opensource tool for making diagrams and GUI prototyping that everyone can use.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Pencil\" \"Opensource tool for making diagrams and GUI prototyping that everyone can use.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Fotoxx" > /dev/null; then
if which fotoxx >/dev/null; then
                    im=$im"FALSE \"Fotoxx\"               \"Program for editing image files from a digital camera.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Fotoxx\"               \"Program for editing image files from a digital camera.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Shutter" > /dev/null; then
if which shutter >/dev/null; then
                    im=$im"FALSE \"Shutter\"       \"Shutter is a GTK+ 2.0 screenshot application written in perl.\" \"INSTALLED  \"  "
else
m=$im"FALSE \"Shutter\"       \"Shutter is a GTK+ 2.0 screenshot application written in perl.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Glabels" > /dev/null; then
if which glabels >/dev/null; then
                    im=$im"FALSE \"Glabels\"            \"A program for creating labels and business cards for GNOME\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Glabels\"            \"A program for creating labels and business cards for GNOME\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Kover" > /dev/null; then
if which kover >/dev/null; then
                    im=$im"FALSE \"Kover\"              \"WYSIWYG CD cover printer with CDDB support\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Kover\"              \"WYSIWYG CD cover printer with CDDB support\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "LibreOffice" > /dev/null; then
if which libreoffice >/dev/null; then
                    im=$im"FALSE \"LibreOffice\"         \"Open Source, community-developed, office productivity suite.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"LibreOffice\"         \"Open Source, community-developed, office productivity suite.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Basket" > /dev/null; then
if which basket >/dev/null; then
                    im=$im"FALSE \"Basket\"         \"Organize your notes in a hierarchy of baskets, by topic or project. Group notes together, collapse non-important groups...\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Basket\"         \"Organize your notes in a hierarchy of baskets, by topic or project. Group notes together, collapse non-important groups...\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "ProjectLibre" > /dev/null; then
if which projectlibre >/dev/null; then
                    im=$im"FALSE \"ProjectLibre\"         \"ProjectLibre is the open source alternative to Microsoft Project.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"ProjectLibre\"         \"ProjectLibre is the open source alternative to Microsoft Project.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "PDF Mod" > /dev/null; then
if which pdfmod >/dev/null; then
                    im=$im"FALSE \"PDF Mod\"                \"Simple application for modifying PDF written in C Sharp\" \"INSTALLED  \"  "
else
im=$im"FALSE \"PDF Mod\"                \"Simple application for modifying PDF written in C Sharp\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "PDF Split and Merge" > /dev/null; then
if which pdfsam >/dev/null; then
                    im=$im"FALSE \"PDF Split and Merge\"                \"Very simple, easy to use, free, open source utility to split and merge pdf files.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"PDF Split and Merge\"                \"Very simple, easy to use, free, open source utility to split and merge pdf files.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Scribus" > /dev/null; then
if which scribus >/dev/null; then
                    im=$im"FALSE \"Scribus\"               \"DeskTop Publishing application written in Qt\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Scribus\"               \"DeskTop Publishing application written in Qt\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Gnome dia" > /dev/null; then
if which dia >/dev/null; then
                    im=$im"FALSE \"Gnome dia\"                   \"A GTK+ based diagram creation program similar Windows Visio\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Gnome dia\"                   \"A GTK+ based diagram creation program similar Windows Visio\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Gnumeric" > /dev/null; then
if which gnumeric >/dev/null; then
                    im=$im"FALSE \"Gnumeric\"                 \"A GNOME Spreadsheet Program\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Gnumeric\"                 \"A GNOME Spreadsheet Program\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Planner" > /dev/null; then
if which planner >/dev/null; then
                    im=$im"FALSE \"Planner\"            \"A graphical project management tool\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Planner\"            \"A graphical project management tool\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "VYM" > /dev/null; then
if which vym >/dev/null; then
                    im=$im"FALSE \"VYM\"                   \"A tool to generate and manipulate maps which show your thoughts.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"VYM\"                   \"A tool to generate and manipulate maps which show your thoughts.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Freemind" > /dev/null; then
if which freemind >/dev/null; then
                    im=$im"FALSE \"Freemind\"             \"FreeMind is a premier free mind-mapping software written in Java.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Freemind\"             \"FreeMind is a premier free mind-mapping software written in Java.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "yEd" > /dev/null; then
if which yEd >/dev/null; then
                    im=$im"FALSE \"yEd\"             \"yEd is a powerful desktop application that can be used to quickly and effectively generate high-quality diagrams.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"yEd\"             \"yEd is a powerful desktop application that can be used to quickly and effectively generate high-quality diagrams.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Cmap Tools" > /dev/null; then
if which cmaptools >/dev/null; then
                    im=$im"FALSE \"Cmap Tools\"             \"Program empowers users to construct, navigate, share and criticize knowledge models represented as concept maps.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Cmap Tools\"             \"yEd is a powerful desktop application that can be used to quickly and effectively generate high-quality diagrams.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Anki" > /dev/null; then
if which anki >/dev/null; then
                    im=$im"FALSE \"Anki\"                \"Flashcard program for using space repetition learning.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Anki\"                \"Flashcard program for using space repetition learning.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Wine and winetricks" > /dev/null; then
if which wine >/dev/null; then
                    im=$im"FALSE \"Wine and winetricks\"                  \"A compatibility layer for running Windows programs\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Wine and winetricks\"                  \"A compatibility layer for running Windows programs\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Oracle Virtual Box" > /dev/null; then
if [ -f '/etc/yum.repos.d/virtualbox.repo' ] || [ -f /usr/bin/VirtualBox ]; then
                    im=$im"FALSE \"Oracle Virtual Box\"            \" Powerful x86 virtualization for enterprise as well as home\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Oracle Virtual Box\"            \" Powerful x86 virtualization for enterprise as well as home use\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "PlayOnLinux" > /dev/null; then
if which playonlinux >/dev/null; then
                    im=$im"FALSE \"PlayOnLinux\"                \"GUI for managing Windows programs under linux\" \"INSTALLED  \"  "
else
im=$im"FALSE \"PlayOnLinux\"                \"GUI for managing Windows programs under linux\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "TeamViewer" > /dev/null; then
if which teamviewer >/dev/null; then
                    im=$im"FALSE \"TeamViewer\"                  \"Remote Support, Remote Access, Remote Administration, Home Office and Online Meetings.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"TeamViewer\"                  \"Remote Support, Remote Access, Remote Administration, Home Office and Online Meetings.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "DropBox" > /dev/null; then
if which dropbox >/dev/null; then
                    im=$im"FALSE \"DropBox\"                    \"Sync and backup files between computers\" \"INSTALLED  \"  "
else
im=$im"FALSE \"DropBox\"                    \"Sync and backup files between computers\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Miro Video Converter" > /dev/null; then
if which miro-video-converter.py >/dev/null; then
                    im=$im"FALSE \"Miro Video Converter\"                   \"Open source, cross-platform application to convert videos from and to various formats, including formats suitable for devices such as Android phones.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Miro Video Converter\"                   \"Open source, cross-platform application to convert videos from and to various formats, including formats suitable for devices such as Android phones.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Qwinff" > /dev/null; then
if which qwinff >/dev/null; then
                    im=$im"FALSE \"Qwinff\"                   \"QWinFF is a cross-platform, easy-to-use media converter frontend to FFmpeg.\" \"INSTALADO  \"  "
else
im=$im"FALSE \"Qwinff\"                   \"QWinFF is a cross-platform, easy-to-use media converter frontend to FFmpeg.\" \"NO INSTALADO  \"  "
fi
            fi

if ! $installed | grep "Transcoder" > /dev/null; then
if which transcoder >/dev/null; then
                    im=$im"FALSE \"Transcoder\"                \"Video converter for Linux using GTK+ as GUI toolkit and ffmpeg as backend.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Transcoder\"                \"Video converter for Linux using GTK+ as GUI toolkit and ffmpeg as backend.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Mobilmedia Converter" > /dev/null; then
if which mmc >/dev/null; then
                    im=$im"FALSE \"Mobilmedia Converter\"                  \"Video converter for converting between popular desktop audio and video formats\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Mobilmedia Converter\"                  \"Video converter for converting between popular desktop audio and video formats\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "GtkPod" > /dev/null; then
if which gtkpod >/dev/null; then
                    im=$im"FALSE \"GtkPod\"             \"Graphical user interface for the Apple iPod for Unix-like systems, written using the GTK+ toolkit.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"GtkPod\"             \"graphical user interface for the Apple iPod for Unix-like systems, written using the GTK+ toolkit. \" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "EasyTag" > /dev/null; then
if which easytag >/dev/null; then
                    im=$im"FALSE \"EasyTag\"              \"Utility for viewing, editing and writing ID3 tags of your MP3 files.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"EasyTag\"              \"Utility for viewing, editing and writing ID3 tags of your MP3 files.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Avidemux" > /dev/null; then
if which avidemux >/dev/null; then
                    im=$im"FALSE \"Avidemux\"       \"A graphical tool to edit video (filter/re-encode/split).\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Avidemux\"       \"A graphical tool to edit video (filter/re-encode/split).\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Blender" > /dev/null; then
if which blender >/dev/null; then
                    im=$im"FALSE \"Blender\"               \"A fully integrated 3D graphics creation suite.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Blender\"               \"A fully integrated 3D graphics creation suite.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Tupi" > /dev/null; then
if which tupi >/dev/null; then
                    im=$im"FALSE \"Tupi\"               \"A design and authoring tool for digital artists interested in 2D Animation.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Tupi\"               \"A design and authoring tool for digital artists interested in 2D Animation.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "BRL-CAD" > /dev/null; then
if which brlcad-config >/dev/null; then
                    im=$im"FALSE \"BRL-CAD\"    \"Powerful cross-platform open source solid modeling system.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"BRL-CAD\"    \"Powerful cross-platform open source solid modeling system.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Sweet Home 3D" > /dev/null; then
if [ -f /usr/share/applications/SweetHome3D.desktop ] && [ -f /usr/bin/sweethome3d.sh ]; then
                    im=$im"FALSE \"Sweet Home 3D\"          \"Interior 2D design application with 3D preview.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Sweet Home 3D\"          \"Interior 2D design application with 3D preview.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Libre CAD" > /dev/null; then
if which librecad >/dev/null; then
                    im=$im"FALSE \"Libre CAD\"    \"Free Open Source CAD application\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Libre CAD\"    \"Free Open Source CAD application\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "FreeCAD" > /dev/null; then
if which FreeCAD >/dev/null; then
                    im=$im"FALSE \"FreeCAD\"    \"General purpose feature-based, parametric 3D modeler for CAD, MCAD, CAx, CAE and PLM.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"FreeCAD\"    \"General purpose feature-based, parametric 3D modeler for CAD, MCAD, CAx, CAE and PLM.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "DraftSight" > /dev/null; then
if which draftsight >/dev/null; then
                    im=$im"FALSE \"DraftSight\"    \"Proprietary freeware 2D CAD product for engineers, architects, designers, draftspeople, students and educators.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"DraftSight\"    \"Proprietary freeware 2D CAD product for engineers, architects, designers, draftspeople, students and educators.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Inkscape" > /dev/null; then
if which inkscape >/dev/null; then
                    im=$im"FALSE \"Inkscape\"                 \"Vector graphics editor using the SVG file format.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Inkscape\"                 \"Vector graphics editor using the SVG file format.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Openshot" > /dev/null; then
if which openshot >/dev/null; then
                    im=$im"FALSE \"Openshot\"    \"Open-source, non-linear video editor for Linux based on MLT framework.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Openshot\"    \"Open-source, non-linear video editor for Linux based on MLT framework.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Kdenlive" > /dev/null; then
if which kdenlive >/dev/null; then
                    im=$im"FALSE \"Kdenlive\"    \"Intuitive and powerful multi-track video editor, including most recent video technologies.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Kdenlive\"    \"Intuitive and powerful multi-track video editor, including most recent video technologies.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "LIVES" > /dev/null; then
if which lives >/dev/null; then
                    im=$im"FALSE \"LIVES\"    \"Linux Video Editing System.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"LIVES\"    \"Linux Video Editing System.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Imagination" > /dev/null; then
if which imagination >/dev/null; then
                    im=$im"FALSE \"Imagination\"    \"DVD slide show maker.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Imagination\"    \"DVD slide show maker.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "DeveDe" > /dev/null; then
if which devede >/dev/null; then
                    im=$im"FALSE \"DeveDe\"    \"Program to create VideoDVDs and CDs.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"DeveDe\"    \"Program to create VideoDVDs and CDs.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "DVDStyler" > /dev/null; then
if which dvdstyler >/dev/null; then
                    im=$im"FALSE \"DVDStyler\"    \"Crossplatform DVD Authoring System.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"DVDStyler\"    \"Crossplatform DVD Authoring System.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "ffDiaporama" > /dev/null; then
if which ffDiaporama >/dev/null; then
                    im=$im"FALSE \"ffDiaporama\"    \"Movie creator from photos and video clips.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"ffDiaporama\"    \"Movie creator from photos and video clips.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Wink" > /dev/null; then
if which wink >/dev/null; then
                    im=$im"FALSE \"Wink\"    \"Wink is a Tutorial and Presentation creation software.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Wink\"    \"Wink is a Tutorial and Presentation creation software.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Virtual Lighttable and Darkroom" > /dev/null; then
if which darktable >/dev/null; then
                    im=$im"FALSE \"Virtual Lighttable and Darkroom\"    \"Utility to organize and develop raw images.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Virtual Lighttable and Darkroom\"    \"Utility to organize and develop raw images.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Gnome Subtitles" > /dev/null; then
if which gnome-subtitles >/dev/null; then
                    im=$im"FALSE \"Gnome Subtitles\"    \"Video subtitle editor for GNOME.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Gnome Subtitles\"    \"Video subtitle editor for GNOME.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "VLC media player" > /dev/null; then
if which vlc >/dev/null; then
                    im=$im"FALSE \"VLC media player\"    \"A multi-platform MPEG, VCD/DVD, and DivX player.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"VLC media player\"    \"A multi-platform MPEG, VCD/DVD, and DivX player.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Pipelight" > /dev/null; then
if which pipelight-plugin >/dev/null; then
                    im=$im"FALSE \"Pipelight\"    \"Pipelight is a special browser plugin which allows one to use windows only plugins inside Linux browsers. We are currently focusing on Silverlight.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Pipelight\"    \"Pipelight is a special browser plugin which allows one to use windows only plugins inside Linux browsers. We are currently focusing on Silverlight.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "XBMC" > /dev/null; then
if which xbmc >/dev/null; then
                    im=$im"FALSE \"XBMC\"    \"Complete media center solution for Linux.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"XBMC\"    \"Complete media center solution for Linux.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Clementine" > /dev/null; then
if which clementine >/dev/null; then
                    im=$im"FALSE \"Clementine\"    \"A music player and library organizer.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Clementine\"    \"A music player and library organizer.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Spotify" > /dev/null; then
if which spotify >/dev/null; then
                    im=$im"FALSE \"Spotify\"    \"A commercial music streaming service providing digital rights management-restricted content.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Spotify\"    \"A commercial music streaming service providing digital rights management-restricted content.\" \"NO INSTALLED  \"  "
fi
            fi
 
if ! $installed | grep "Sound converter" > /dev/null; then
if which soundconverter >/dev/null; then
                    im=$im"FALSE \"Sound converter\"    \"A simple sound converter application for GNOME.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Sound converter\"    \"A simple sound converter application for GNOME.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Audacity" > /dev/null; then
if which audacity >/dev/null; then
                    im=$im"FALSE \"Audacity\"    \"A program that lets you manipulate digital audio waveforms.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Audacity\"    \"A program that lets you manipulate digital audio waveforms.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "OcenAudio" > /dev/null; then
if which ocenaudio >/dev/null; then
                    im=$im"FALSE \"OcenAudio\"    \"Cross-platform, easy to use, fast and functional audio editor..\" \"INSTALLED  \"  "
else
im=$im"FALSE \"OcenAudio\"    \"Cross-platform, easy to use, fast and functional audio editor.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Mixxx" > /dev/null; then
if which mixxx >/dev/null; then
                    im=$im"FALSE \"Mixxx\"    \"Mixxx has everything you need to start making DJ mixes in a tight, integrated package.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Mixxx\"    \"Mixxx has everything you need to start making DJ mixes in a tight, integrated package.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "SKYPE" > /dev/null; then
if which skype >/dev/null; then
                    im=$im"FALSE \"SKYPE\"    \"Free Internet telephony that just works.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"SKYPE\"    \"Free Internet telephony that just works.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Turpial" > /dev/null; then
if which turpial >/dev/null; then
                    im=$im"FALSE \"Turpial\"    \"Cool twitter client with many features and very light.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Turpial\"    \"Cool twitter client with many features and very light.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Gwibber" > /dev/null; then
if which gwibber >/dev/null; then
                    im=$im"FALSE \"Gwibber\"    \"Microblogging client, which supports Twitter, Identi.ca, StatusNet, Facebook, Flickr, Digg, FriendFeed and Qaiku.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Gwibber\"    \"Microblogging client, which supports Twitter, Identi.ca, StatusNet, Facebook, Flickr, Digg, FriendFeed and Qaiku.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Bible Time" > /dev/null; then
if which bibletime >/dev/null; then
                    im=$im"FALSE \"Bible Time\"    \"Free and easy to use cross-platform bible study tool.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Bible Time\"    \"Free and easy to use cross-platform bible study tool.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Tuxpaint" > /dev/null; then
if which tuxpaint >/dev/null; then
                    im=$im"FALSE \"Tuxpaint\"    \"Tux Paint is a free drawing program designed for young children.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Tuxpaint\"    \"Tux Paint is a free drawing program designed for young children.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Stellarium" > /dev/null; then
if which stellarium >/dev/null; then
                    im=$im"FALSE \"Stellarium\"    \"A stellarium with great graphics and a nice database of sky-objects.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Stellarium\"    \"A stellarium with great graphics and a nice database of sky-objects.\" \"INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Celestia" > /dev/null; then
if which celestia >/dev/null; then
                    im=$im"FALSE \"Celestia\"    \"OpenGL real-time visual space simulation.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Celestia\"    \"OpenGL real-time visual space simulation.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Gcompris" > /dev/null; then
if which gcompris >/dev/null; then
                    im=$im"FALSE \"Gcompris\"    \" Educational suite for kids 2-10 years old.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Gcompris\"    \" Educational suite for kids 2-10 years old.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "TuxMath" > /dev/null; then
if which tuxmath >/dev/null; then
                    im=$im"FALSE \"TuxMath\"    \"Math game for kids with Tux.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"TuxMath\"    \"Math game for kids with Tux.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "TuxType" > /dev/null; then
if which tuxtype >/dev/null; then
                    im=$im"FALSE \"TuxType\"    \"Educational Typing Tutor Game Starring Tux\" \"INSTALLED  \"  "
else
im=$im"FALSE \"TuxType\"    \"Educational Typing Tutor Game Starring Tux\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Childsplay" > /dev/null; then
if which childsplay >/dev/null; then
                    im=$im"FALSE \"Childsplay\"    \"Suite of educational games for young children.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Childsplay\"    \"Suite of educational games for young children.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Scratch" > /dev/null; then
if which scratch >/dev/null; then
                    im=$im"FALSE \"Scratch\"    \"Programming system and content development tool.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Scratch\"    \"Programming system and content development tool.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Ri-li" > /dev/null; then
if which Ri_li >/dev/null; then
                    im=$im"FALSE \"Ri-li\"    \"Arcade game where you drive a toy wood engine.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Ri-li\"    \"Arcade game where you drive a toy wood engine.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Frozen Bubble" > /dev/null; then
if which frozen-bubble >/dev/null; then
                    im=$im"FALSE \"Frozen Bubble\"    \"Frozen Bubble arcade game\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Frozen Bubble\"    \"Frozen Bubble arcade game\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Extreme Tux Racer" > /dev/null; then
if which etracer >/dev/null; then
                    im=$im"FALSE \"Extreme Tux Racer\"    \"3D racing game featuring Tux.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Extreme Tux Racer\"    \"3D racing game featuring Tux.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Super Tux Kart" > /dev/null; then
if which supertuxkart >/dev/null; then
                    im=$im"FALSE \"Super Tux Kart\"    \"Go-kart racing game for kids with several famous OpenSource mascots participating.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Super Tux Kart\"    \"Go-kart racing game for kids with several famous OpenSource mascots participating.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Wormux" > /dev/null; then
if which wormux >/dev/null; then
                    im=$im"FALSE \"Wormux\"    \"2D convivial mass murder game.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Wormux\"    \"2D convivial mass murder game.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Tremulous" > /dev/null; then
if which tremded >/dev/null; then
                    im=$im"FALSE \"Tremulous\"    \"A free team based FPS/RTS hybrid built on the ioq3 engine. Includes community updates.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Tremulous\"    \"A free team based FPS/RTS hybrid built on the ioq3 engine. Includes community updates.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Super Methane Brothers" > /dev/null; then
if which methane >/dev/null; then
                    im=$im"FALSE \"Super Methane Brothers\"    \"Super Methane Brothers.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Super Methane Brothers\"    \"Super Methane Brothers.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Pingus" > /dev/null; then
if which pingus >/dev/null; then
                    im=$im"FALSE \"Pingus\"    \"Guide the penguins safely home before they drop of the cliff.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Pingus\"    \"Guide the penguins safely home before they drop of the cliff.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Hedgewars" > /dev/null; then
if which hedgewars >/dev/null; then
                    im=$im"FALSE \"Hedgewars\"    \"Free Worms-like turn based strategy game.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Hedgewars\"    \"Free Worms-like turn based strategy game.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Glaxium" > /dev/null; then
if which glaxium >/dev/null; then
                    im=$im"FALSE \"Glaxium\"    \"An OpenGL space shooter.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Glaxium\"    \"An OpenGL space shooter.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Amoebax" > /dev/null; then
if which amoebax >/dev/null; then
                    im=$im"FALSE \"Amoebax\"    \"Puyo Puyo-style puzzle game for up to two players.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Amoebax\"    \"Puyo Puyo-style puzzle game for up to two players.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Alien Arena" > /dev/null; then
if which alienarena >/dev/null; then
                    im=$im"FALSE \"Alien Arena\"    \"Multiplayer retro sci-fi deathmatch game.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Alien Arena\"    \"Multiplayer retro sci-fi deathmatch game.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "TORCS" > /dev/null; then
if which torcs >/dev/null; then
                    im=$im"FALSE \"TORCS\"    \"A 3D racing cars simulator using OpenGL.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"TORCS\"    \"A 3D racing cars simulator using OpenGL.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "FlightGear" > /dev/null; then
if which fgfs >/dev/null; then
                    im=$im"FALSE \"FlightGear\"    \"An open-source, multi-platform flight simulator.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"FlightGear\"    \"An open-source, multi-platform flight simulator.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Performous" > /dev/null; then
if which performous >/dev/null; then
                    im=$im"FALSE \"Performous\"    \"Open-source rhythm/performance platform that contains singing, guitar/bass playing, drumming and dancing all in one game.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Performous\"    \"Open-source rhythm/performance platform that contains singing, guitar/bass playing, drumming and dancing all in one game.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Steam" > /dev/null; then
if which steam >/dev/null; then
                    im=$im"FALSE \"Steam\"    \"Delivers a range of games straight to a computer's desktop.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Steam\"    \"Delivers a range of games straight to a computer's desktop.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Gtk-Gnutella" > /dev/null; then
if which gtk-gnutella >/dev/null; then
                    im=$im"FALSE \"Gtk-Gnutella\"    \"GUI based Gnutella Client(frostwire)\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Gtk-Gnutella\"    \"GUI based Gnutella Client (frostwire)\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Frostwire" > /dev/null; then
if which frostwire >/dev/null; then
                    im=$im"FALSE \"Frostwire\"    \"FrostWire is a free, open source BitTorrent client.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Frostwire\"    \"FrostWire is a free, open source BitTorrent client.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "GrooveOff" > /dev/null; then
if which grooveoff >/dev/null; then
                    im=$im"FALSE \"GrooveOff\"    \"Unofficial client for grooveshark.com.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"GrooveOff\"    \"Unofficial client for grooveshark.com.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "UGET" > /dev/null; then
if which uget-gtk >/dev/null; then
                    im=$im"FALSE \"UGET\"    \"GTK+ download manager featuring download classification and HTML import.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"UGET\"    \"GTK+ download manager featuring download classification and HTML import.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Yum Extender" > /dev/null; then
if which yumex >/dev/null; then
                    im=$im"FALSE \"Yum Extender\"    \"Yum Extender graphical package management tool.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Yum Extender\"    \"Yum Extender graphical package management tool.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Blueman" > /dev/null; then
if which blueman-manager >/dev/null; then
                    im=$im"FALSE \"Blueman\"    \"GTK+ bluetooth manager.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Blueman\"    \"GTK+ bluetooth manager.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Google-Chrome" > /dev/null; then
if which google-chrome >/dev/null; then
                    im=$im"FALSE \"Google-Chrome\"    \"Browser that combines a minimal design with sophisticated technology to make the web faster, safer, and easier.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Google-Chrome\"    \"Browser that combines a minimal design with sophisticated technology to make the web faster, safer, and easier.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Chromium" > /dev/null; then
if which chromium-browser >/dev/null; then
                    im=$im"FALSE \"Chromium\"    \"The open-source project behind Google Chrome, an attempt at creating a safer, faster, and more stable browser.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Chromium\"    \"The open-source project behind Google Chrome, an attempt at creating a safer, faster, and more stable browser.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Opera" > /dev/null; then
if which opera >/dev/null; then
                    im=$im"FALSE \"Opera\"    \"Web browser, smaller, faster, customize, powerful, yet user-friendly.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Opera\"    \"Web browser, smaller, faster, customize, powerful, yet user-friendly.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "BleachBit" > /dev/null; then
if which bleachbit >/dev/null; then
                    im=$im"FALSE \"BleachBit\"    \"Deletes unneeded files to free disk space and maintain privacy.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"BleachBit\"    \"Deletes unneeded files to free disk space and maintain privacy.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "GnomeTweakTool and dconf-editor" > /dev/null; then
if which gnome-tweak-tool >/dev/null; then
                    im=$im"FALSE \"GnomeTweakTool and dconf-editor\"    \"Advanced tools for customizing GNOME 3 options.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"GnomeTweakTool and dconf-editor\"    \"Advanced tools for customizing GNOME 3 options.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Menu Libre" > /dev/null; then
if which menulibre >/dev/null; then
                    im=$im"FALSE \"Menu Libre\"    \"An advanced menu editor that provides modern features in a clean, easy-to-use interface.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Menu Libre\"    \"An advanced menu editor that provides modern features in a clean, easy-to-use interface.\" \"NO INSTALLED  \"  "
fi
            fi

if ! $installed | grep "Bitdefender" > /dev/null; then
if [ -f /opt/BitDefender-scanner/bin/bdgui ] || [ -f /opt/BitDefender-scanner/bin/bdscan ]; then
                    im=$im"FALSE \"Bitdefender\"    \"Advanced antivirus for partitions NTSF.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Bitdefender\"    \"Advanced antivirus for partitions NTSF.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "System Information" > /dev/null; then
                    im=$im"FALSE \"System Information\"    \"Must the System Information\" \"ACTIVO  \"  "
            fi


if ! $installed | grep "I-nex" > /dev/null; then
if which i-nex >/dev/null; then
                    im=$im"FALSE \"I-nex\"    \" A system information and benchmark tool.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"I-nex\"    \" A system information and benchmark tool.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Alien" > /dev/null; then
if which alien >/dev/null; then
                    im=$im"FALSE \"Alien\"    \"Convert and install deb and other packages: rpm, slackware tgz.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Alien\"    \"Convert and install deb and other packages: rpm, slackware tgz.\" \"NO INSTALLED  \"  "
fi
            fi


if ! $installed | grep "Microsoft TrueType core fonts" > /dev/null; then
if [ -d /usr/share/fonts/msttcorefonts ]; then
                    im=$im"FALSE \"Microsoft TrueType core fonts\"    \"TrueType core fonts for the web.\" \"INSTALLED  \"  "
else
im=$im"FALSE \"Microsoft TrueType core fonts\"    \"TrueType core fonts for the web.\" \"NO INSTALLED  \"  "
fi
            fi
fi

    }



chooseInstalls(){
     
            #choosing witch installs/tweaks to run
            echo "Running Choice Menu..."
            choice=`echo $im | sh -`
           
#installing dependency stdc++-33
#            if test ${#choice} -gt 0; then
#                    libstdc
#            fi
     
            if echo $choice | grep "Repositorios RPM Fusion" > /dev/null; then
                    extraRepos
       
            fi


if echo $choice | grep "Repositories RPM Fusion" > /dev/null; then
                    extraRepos
       
            fi
          
            if echo $choice | grep "Cambiar lenguaje del sistema" > /dev/null; then
                    lenguaje
            fi


if echo $choice | grep "Change system language" > /dev/null; then
                    lenguaje
            fi

            if echo $choice | grep "Herramientas Básicas de compilación" > /dev/null; then
                    basicompile
            fi


if echo $choice | grep "Build Basic Tools" > /dev/null; then
                    basicompile
            fi

if echo $choice | grep "Mozilla Firefox" > /dev/null; then
                    zorrito
            fi

            if echo $choice | grep "Instalar Codecs Audio/Video" > /dev/null; then
                    multimediaCodecs
            fi

            if echo $choice | grep "Install Codecs Audio/Video" > /dev/null; then
                    multimediaCodecs
            fi

            if echo $choice | grep "Flash Player" > /dev/null; then
                    flash
            fi
            if echo $choice | grep "Unrar y p7zip" > /dev/null; then
                    comprimir
            fi


            if echo $choice | grep "Unrar and p7zip" > /dev/null; then
                    comprimir
            fi

            if echo $choice | grep "Java OpenJDK" > /dev/null; then
                    java
            fi

            if echo $choice | grep "Java JRE Oracle" > /dev/null; then
                    jre
            fi

            if echo $choice | grep "Java JDK Oracle" > /dev/null; then
                    jdkin
            fi

            if echo $choice | grep "GIMP" > /dev/null; then
                    gimp
            fi

            if echo $choice | grep "Hugin" > /dev/null; then
                    hugp
            fi

            if echo $choice | grep "Converseen" > /dev/null; then
                    converseen
            fi 

            if echo $choice | grep "MyPaint" > /dev/null; then
                    mipaint
            fi

            if echo $choice | grep "Pinta" > /dev/null; then
                    pint
            fi

            if echo $choice | grep "Pencil" > /dev/null; then
                    pencil
            fi

            if echo $choice | grep "Fotoxx" > /dev/null; then
                    fotoxx
            fi
            if echo $choice | grep "Shutter" > /dev/null; then
                    shutter
            fi
            if echo $choice | grep "Glabels" > /dev/null; then
                    glabels
            fi
            if echo $choice | grep "Kover" > /dev/null; then
                    kover
            fi
            if echo $choice | grep "LibreOffice" > /dev/null; then
                    office
            fi

            if echo $choice | grep "Basket" > /dev/null; then
                    basquet
            fi

            if echo $choice | grep "ProjectLibre" > /dev/null; then
                    project
            fi


            if echo $choice | grep "PDF Mod" > /dev/null; then
                    pdfmod
            fi

            if echo $choice | grep "PDF Split and Merge" > /dev/null; then
                    pdfsam
            fi

            if echo $choice | grep "Scribus" > /dev/null; then
                    scribus
            fi
            if echo $choice | grep "Gnome dia" > /dev/null; then
                    adia
            fi
            if echo $choice | grep "Gnumeric" > /dev/null; then
                    gnu
            fi
            if echo $choice | grep "Planner" > /dev/null; then
                    planner
            fi
            if echo $choice | grep "VYM" > /dev/null; then
                    vym
            fi
            if echo $choice | grep "Freemind" > /dev/null; then
                    freemind
            fi

            if echo $choice | grep "yEd" > /dev/null; then
                    yEdt
            fi

            if echo $choice | grep "Cmap Tools" > /dev/null; then
                    cmap
            fi

            if echo $choice | grep "Anki" > /dev/null; then
                    anki
            fi
            
            if echo $choice | grep "Wine y winetricks" > /dev/null; then
                    wine
            fi


if echo $choice | grep "Wine and winetricks" > /dev/null; then
                    wine
            fi

            if echo $choice | grep "Oracle Virtual Box" > /dev/null; then
                    virtualbox
            fi
            if echo $choice | grep "PlayOnLinux" > /dev/null; then
                    play
            fi
            if echo $choice | grep "TeamViewer" > /dev/null; then
                    team
            fi
            if echo $choice | grep "DropBox" > /dev/null; then
                    dropbox
            fi
            if echo $choice | grep "Hyper Video Converter" > /dev/null; then
                    Hyper
            fi

            if echo $choice | grep "Miro Video Converter" > /dev/null; then
                    mvcon
            fi


            if echo $choice | grep "Qwinff" > /dev/null; then
                    qwinf
            fi
            if echo $choice | grep "Transcoder" > /dev/null; then
                    transcoder
            fi
            if echo $choice | grep "Mobilmedia Converter" > /dev/null; then
                    Mobilmedia
            fi              
           
            if echo $choice | grep "GtkPod" > /dev/null; then
                    gtkPod
            fi
            if echo $choice | grep "EasyTag" > /dev/null; then
                    easyTag
            fi
            if echo $choice | grep "Avidemux" > /dev/null; then
                    avidemux
            fi
            if echo $choice | grep "Blender" > /dev/null; then
                    blender
            fi

            if echo $choice | grep "Tupi" > /dev/null; then
                    tupapi
            fi

            if echo $choice | grep "BRL-CAD" > /dev/null; then
                    brlcad
            fi

            if echo $choice | grep "Sweet Home 3D" > /dev/null; then
                    Sweet
            fi
            if echo $choice | grep "LibreCAD" > /dev/null; then
                    libreCAD
            fi

            if echo $choice | grep "FreeCAD" > /dev/null; then
                    freecad
            fi

            if echo $choice | grep "DraftSight" > /dev/null; then
                    Draft
            fi

            if echo $choice | grep "Inkscape" > /dev/null; then
                    inkscape
            fi
     
            if echo $choice | grep "Openshot" > /dev/null; then
                    openshot
            fi

if echo $choice | grep "Kdenlive" > /dev/null; then
                    kden
            fi


if echo $choice | grep "LIVES" > /dev/null; then
                    lives
            fi


if echo $choice | grep "Imagination" > /dev/null; then
                    imagination
            fi


if echo $choice | grep "DeveDe" > /dev/null; then
                    deveDe
            fi


if echo $choice | grep "DVDStyler" > /dev/null; then
                    dVDStyler
            fi


if echo $choice | grep "ffDiaporama" > /dev/null; then
                    ffaporama
            fi

if echo $choice | grep "Wink" > /dev/null; then
                    wnk 
            fi

if echo $choice | grep "Virtual Lighttable and Darkroom" > /dev/null; then
                    Virtual
            fi


if echo $choice | grep "Gnome Subtitles" > /dev/null; then
                    GnomeSubtitles
            fi


if echo $choice | grep "VLC media player" > /dev/null; then
                    vlc
            fi

if echo $choice | grep "Pipelight" > /dev/null; then
                    flix
            fi

if echo $choice | grep "XBMC" > /dev/null; then
                    xbm
            fi


if echo $choice | grep "Clementine" > /dev/null; then
                    clementine
            fi

if echo $choice | grep "Spotify" > /dev/null; then
                    spotify
            fi

if echo $choice | grep "Sound converter" > /dev/null; then
                    sound
            fi


if echo $choice | grep "Audacity" > /dev/null; then
                    audacity
            fi

if echo $choice | grep "OcenAudio" > /dev/null; then
                    ocenaudio
            fi

if echo $choice | grep "Mixxx" > /dev/null; then
                    mix
            fi


if echo $choice | grep "SKYPE" > /dev/null; then
                    skype
            fi

if echo $choice | grep "Turpial" > /dev/null; then
                    turpial
            fi


if echo $choice | grep "Gwibber" > /dev/null; then
                    gwibber
            fi


if echo $choice | grep "Bible Time" > /dev/null; then
                    bible
            fi


if echo $choice | grep "Tuxpaint" > /dev/null; then
                    tuxpaint
            fi


if echo $choice | grep "Stellarium" > /dev/null; then
                    Stellar
            fi


if echo $choice | grep "Celestia" > /dev/null; then
                    celestia
            fi


if echo $choice | grep "Gcompris" > /dev/null; then
                    gcompris
            fi


if echo $choice | grep "TuxMath" > /dev/null; then
                    tuxMath
            fi


if echo $choice | grep "TuxType" > /dev/null; then
                    tuxType
            fi


if echo $choice | grep "Childsplay" > /dev/null; then
                    childsplay
            fi


if echo $choice | grep "Scratch" > /dev/null; then
                    scratch
            fi


if echo $choice | grep "Ri-li" > /dev/null; then
                    ri
            fi


if echo $choice | grep "Frozen Bubble" > /dev/null; then
                    Frozen
            fi


if echo $choice | grep "Extreme Tux Racer" > /dev/null; then
                    Extreme
            fi


if echo $choice | grep "Super Tux Kart" > /dev/null; then
                    Super
            fi


if echo $choice | grep "Wormux" > /dev/null; then
                    wormux
            fi


if echo $choice | grep "Tremulous" > /dev/null; then
                    tremulous
            fi


if echo $choice | grep "Super Methane Brothers" > /dev/null; then
                    Methane
            fi


if echo $choice | grep "Pingus" > /dev/null; then
                    pingus
            fi


if echo $choice | grep "Hedgewars" > /dev/null; then
                    hedgewars
            fi


if echo $choice | grep "Glaxium" > /dev/null; then
                    glaxium
            fi


if echo $choice | grep "Amoebax" > /dev/null; then
                    amoebax
            fi


if echo $choice | grep "Alien Arena" > /dev/null; then
                    AlienArena
            fi


if echo $choice | grep "TORCS" > /dev/null; then
                    tORCS
            fi


if echo $choice | grep "FlightGear" > /dev/null; then
                    flightGear
            fi

if echo $choice | grep "Performous" > /dev/null; then
                    perfo
            fi

if echo $choice | grep "Steam" > /dev/null; then
                    stea
            fi

if echo $choice | grep "Gtk-Gnutella" > /dev/null; then
                    Gnutella
            fi

if echo $choice | grep "GrooveOff" > /dev/null; then
                    veOff
            fi

if echo $choice | grep "Frostwire" > /dev/null; then
                    wirefro
            fi

if echo $choice | grep "UGET" > /dev/null; then
                    uget
            fi

if echo $choice | grep "Yum Extender" > /dev/null; then
                    YumExtender
            fi


if echo $choice | grep "Blueman" > /dev/null; then
                    blue
            fi


if echo $choice | grep "Google-Chrome" > /dev/null; then
                    Chrome
            fi


if echo $choice | grep "Chromium" > /dev/null; then
                    chromium
            fi


if echo $choice | grep "Opera" > /dev/null; then
                    opera
            fi


if echo $choice | grep "BleachBit" > /dev/null; then
                    bleachBit
            fi


if echo $choice | grep "GnomeTweakTool y dconf-editor" > /dev/null; then
                    GnomeTweak
            fi

if echo $choice | grep "GnomeTweakTool and dconf-editor" > /dev/null; then
                    GnomeTweak
            fi

if echo $choice | grep "Menu Libre" > /dev/null; then
                    mlibre
            fi


if echo $choice | grep "Bitdefender" > /dev/null; then
                    bitdefender
            fi


if echo $choice | grep "Informacion del Sistema" > /dev/null; then
                    infosystem
            fi


if echo $choice | grep "System Information" > /dev/null; then
                    infosystem
            fi


if echo $choice | grep "I-nex" > /dev/null; then
                    inex
            fi

if echo $choice | grep "Alien" > /dev/null; then
                    alien
            fi


if echo $choice | grep "Microsoft TrueType core fonts" > /dev/null; then
                    truetype
            fi


    }
     
     
    ##
    ## Tweak/Install functions
    ##

     
    extraRepos(){
            echo "Adding rpmfusion repositories..."    
            
pkexec dnf -y install --nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$version.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$version.noarch.rpm | $localprogress 

  
    }
     
    lenguaje(){

if [ -x /usr/share/doc/kdesdk* ] && [ $(echo $LANG | cut -b1-2) = "es" ]; then
postinstaller -i kde-l10n-Spanish 

elif [ -x /usr/share/doc/kdesdk* ] && [ $(echo $LANG | cut -b1-2) = "pt" ]; then
postinstaller -i kde-l10n-Portuguese 


elif [ -x /usr/share/doc/kdesdk* ] && [ $(echo $LANG | cut -b1-2) = "fr" ]; then
postinstaller -i kde-l10n-French 



elif [ -x /usr/share/doc/kdesdk* ] && [ $(echo $LANG | cut -b1-2) = "ja" ]; then
postinstaller -i kde-l10n-Japanese 



elif [ -x /usr/share/doc/kdesdk* ] && [ $(echo $LANG | cut -b1-2) = "zh" ]; then
postinstaller -i kde-l10n-Chinese 



elif [ -x /usr/share/doc/kdesdk* ] && [ $(echo $LANG | cut -b1-2) = "it" ]; then
postinstaller -i kde-l10n-Italian 
fi    
    
            postinstaller -i system-config-language 
system-config-language

    }
     
    basicompile(){
            postinstaller -i kernel-headers kernel-devel hg git 

dnf group -y install "Development Tools" "Legacy Software Development" | $localprogress

dnf group -y install "Development Libraries" | $localprogress

dnf group -y install "x-software-development" | $localprogress



    }


    zorrito(){
        postinstaller -i firefox  

    }

     
    multimediaCodecs(){

postinstaller -i gstreamer-plugins-bad -i gstreamer-plugins-bad-free-extras -i gstreamer-plugins-bad-nonfree -i gstreamer-plugins-ugly -i gstreamer-ffmpeg -i ffmpeg -i mencoder -i ffmpeg2theora -i mplayer -i libdvdcss -i faac -i vo-aacenc 

if [ -f /usr/bin/k3b ]; then
postinstaller -i k3b-extras-freeworld 
fi


    }

     
    flash(){

if [[ $architecture = x86_64 ]]; then
$locainst http://linuxdownload.adobe.com/linux/x86_64/adobe-release-x86_64-1.0-1.noarch.rpm
else
$locainst http://linuxdownload.adobe.com/adobe-release/adobe-release-i386-1.0-1.noarch.rpm
fi



postinstaller -i flash-plugin -i hal-flash 

    }
     
    comprimir(){
            postinstaller -i unrar -i p7zip -i p7zip-plugins 

            
    }
     
    java(){
            postinstaller -i java icedtea-web 

    }


jre(){

rm -f /tmp/jre-oraclejava.rpm
rm -f /etc/profile.d/java.sh

if [ -f /usr/lib/IcedTeaPlugin.so ] || [ -f /usr/lib64/IcedTeaPlugin.so ]; then
xterm -e 'dnf -y remove icedtea-web'
fi


if [[ $(rpm -qa jdk*-linux-*.rpm | grep -c jdk*-linux-*.rpm) -gt 0 ]]; then

zenity --question --title="Detected jdk oracle java installed" --text="You need uninstall jdk oracle java, Do you want uninstall" --ok-label "Yes" --cancel-label "No"
if [[ $? -eq 0 ]]; then

xterm -e 'dnf -y erase jdk'

rm -f /etc/profile.d/java.sh

if [ `getconf LONG_BIT` = "64" ]
then
rm -f /usr/lib64/mozilla/plugins/libnpjp2.so
else
rm -f /usr/lib/mozilla/plugins/libnpjp2.so
fi  
           
if [ `getconf LONG_BIT` = "64" ]
then
xterm -e 'wget -c -P/tmp/ -r -l1 -H -t1 -nd -N -np -A jre*-linux-x64.rpm -erobots=off http://uni-smr.ac.ru/archive/dev/java/JRE/oracle/7/'
wait ${!}

xterm -e 'dnf -y install /tmp/jre*-linux-x64.rpm'
else
xterm -e 'wget -c -P/tmp/ -r -l1 -H -t1 -nd -N -np -A jre*-linux-i586.rpm -erobots=off http://uni-smr.ac.ru/archive/dev/java/JRE/oracle/7/'
wait ${!}
xterm -e 'dnf -y install /tmp/jre*-linux-i586.rpm'
fi


if [ `getconf LONG_BIT` = "64" ]
then
ln -s /usr/java/latest/lib64/x86_64/libnpjp2.so /usr/lib64/mozilla/plugins/
else
ln -s /usr/java/latest/lib/i386/libnpjp2.so /usr/lib/mozilla/plugins/
fi

echo 'PATH=/usr/java/latest/bin:$PATH' >> /etc/profile.d/java.sh

if [ `getconf LONG_BIT` = "64" ]
then
rm -f jre*-linux-x64.rpm
else
rm -f jre*-linux-i586.rpm
fi

else
echo 'en otra ocacion'
fi

 else

if [ `getconf LONG_BIT` = "64" ]
then
xterm -e 'wget -c -P/tmp/ -r -l1 -H -t1 -nd -N -np -A jre*-linux-x64.rpm -erobots=off http://uni-smr.ac.ru/archive/dev/java/JRE/oracle/7/'
wait ${!}
xterm -e 'dnf -y install /tmp/jre*-linux-x64.rpm'
else
xterm -e 'wget -c -P/tmp/ -r -l1 -H -t1 -nd -N -np -A jre*-linux-i586.rpm -erobots=off http://uni-smr.ac.ru/archive/dev/java/JRE/oracle/7/'
wait ${!}
xterm -e 'dnf -y install /tmp/jre*-linux-i586.rpm'
fi

if [ -f /usr/lib64/mozilla/plugins/libnpjp2.so ] || [ -f /usr/lib/mozilla/plugins/libnpjp2.so ]; then
echo 'jre plugin enabled'
else
if [ `getconf LONG_BIT` = "64" ]
then
ln -s /usr/java/latest/lib64/x86_64/libnpjp2.so /usr/lib64/mozilla/plugins/
else
ln -s /usr/java/latest/lib/i386/libnpjp2.so /usr/lib/mozilla/plugins/
fi
  fi

if [ -f /etc/profile.d/java.sh ]; then
echo 'default jdk java enabled'
else
echo 'PATH=/usr/java/latest/bin:$PATH' >> /etc/profile.d/java.sh
fi

if [ `getconf LONG_BIT` = "64" ]
then
rm -f jre*-linux-x64.rpm
else
rm -f jre*-linux-i586.rpm
fi
  fi


if [ $(echo $LANG | cut -b1-2) = "es" ]; then
su $user -c 'notify-send "PostInstallerF" "Completada la instalacion de Java JRE Oracle" -i "/usr/share/icons/pinguino.png" -t 5000'
else
su $user -c 'notify-send "PostInstallerF" "Has been completed installation of Java JRE Oracle" -i "/usr/share/icons/pinguino.png" -t 5000'
fi
     
    }


jdkin(){  

if [ -f /usr/lib/IcedTeaPlugin.so ] || [ -f /usr/lib64/IcedTeaPlugin.so ]; then
xterm -e 'dnf -y erase icedtea-web'
fi

if [[ $(rpm -qa jre*-linux-*.rpm | grep -c jre*-linux-*.rpm) -gt 0 ]]; then

zenity --question --title="Detected jre oracle java installed" --text="You need uninstall jre oracle java, Do you want uninstall" --ok-label "Yes" --cancel-label "No"
if [[ $? -eq 0 ]]; then

xterm -e 'dnf -y erase jre'

rm -f /etc/profile.d/java.sh

if [ `getconf LONG_BIT` = "64" ]
then
rm -f /usr/lib64/mozilla/plugins/libnpjp2.so
else
rm -f /usr/lib/mozilla/plugins/libnpjp2.so
fi

if [ `getconf LONG_BIT` = "64" ]
then
xterm -e 'wget -c -P/tmp/ -r -l1 -H -t1 -nd -N -np -A jdk*-linux-x64.rpm -erobots=off http://ftp.wsisiz.edu.pl/pub/pc/pozyteczne%20oprogramowanie/java/'
wait ${!}
xterm -e 'dnf -y install /tmp/jdk*-linux-x64.rpm'
else
xterm -e 'wget -c -P/tmp/ -r -l1 -H -t1 -nd -N -np -A jdk*-linux-i586.rpm -erobots=off http://ftp.wsisiz.edu.pl/pub/pc/pozyteczne%20oprogramowanie/java/'
wait ${!}
xterm -e 'dnf -y install /tmp/jdk*-linux-i586.rpm'
fi


if [ `getconf LONG_BIT` = "64" ]
then
ln -s /usr/java/latest/jre/lib/amd64/libnpjp2.so /usr/lib64/mozilla/plugins/
else
ln -s /usr/java/latest/jre/lib/i386/libnpjp2.so /usr/lib/mozilla/plugins/
fi

echo 'PATH=/usr/java/latest/bin:$PATH' >> /etc/profile.d/java.sh

if [ `getconf LONG_BIT` = "64" ]
then
rm -f jdk*-linux-x64.rpm
else
rm -f jdk*-linux-i586.rpm
fi

 else
echo 'en otra ocacion'
  fi

  else 


          
if [ `getconf LONG_BIT` = "64" ]
then
xterm -e 'wget -c -P/tmp/ -r -l1 -H -t1 -nd -N -np -A jdk*-linux-x64.rpm -erobots=off http://ftp.wsisiz.edu.pl/pub/pc/pozyteczne%20oprogramowanie/java/'
wait ${!}
xterm -e 'dnf -y install /tmp/jdk*-linux-x64.rpm'
else
xterm -e 'wget -c -P/tmp/ -r -l1 -H -t1 -nd -N -np -A jdk*-linux-i586.rpm -erobots=off http://ftp.wsisiz.edu.pl/pub/pc/pozyteczne%20oprogramowanie/java/'
wait ${!}
xterm -e 'dnf -y install /tmp/jdk*-linux-i586.rpm'
fi

if [ -f /usr/lib64/mozilla/plugins/libnpjp2.so ] || [ -f /usr/lib/mozilla/plugins/libnpjp2.so ]; then
echo 'jdk plugin enabled, removing old ln'
rm -f  /usr/lib64/mozilla/plugins/libnpjp2.so
rm -f  /usr/lib/mozilla/plugins/libnpjp2.so
else
if [ `getconf LONG_BIT` = "64" ]
then
ln -s /usr/java/latest/jre/lib/amd64/libnpjp2.so /usr/lib64/mozilla/plugins/
else
ln -s /usr/java/latest/jre/lib/i386/libnpjp2.so /usr/lib/mozilla/plugins/
fi
  fi

if [ -f /etc/profile.d/java.sh ]; then
echo 'default jdk java enabled'
else
echo 'PATH=/usr/java/latest/bin:$PATH' >> /etc/profile.d/java.sh
fi

if [ `getconf LONG_BIT` = "64" ]
then
rm -f jdk*-linux-x64.rpm
else
rm -f jdk*-linux-i586.rpm
fi
  
   fi

if [ $(echo $LANG | cut -b1-2) = "es" ]; then
su $user -c 'notify-send "PostInstallerF" "Completada la instalacion de Java JDK Oracle" -i "/usr/share/icons/pinguino.png" -t 5000'
else
su $user -c 'notify-send "PostInstallerF" "Has been completed installation of Java JKD Oracle" -i "/usr/share/icons/pinguino.png" -t 5000'
fi   

    }

     
    gimp(){
	postinstaller -i gimp 

    }

    hugp(){
	postinstaller -i hugin 

    }


     converseen(){
	postinstaller -i converseen  

    }

     
    mipaint(){
	postinstaller -i mypaint 

    }


    pint(){
	postinstaller -i pinta 

    }


    pencil(){
    	postinstaller -i pencil 
    }

    
    fotoxx(){
      	postinstaller -i fotoxx 

    }
     
    shutter(){
      	postinstaller -i shutter 

    }
     
    glabels(){
      	postinstaller -i glabels 

    }
     
    kover(){
     	postinstaller -i kover 

    }
     
    office(){
     	postinstaller -i libreoffice

    }


    basquet(){ 

	postinstaller -i basket 

    }


    caligra(){
	postinstaller -i calligra 

    }


project(){
            
	postinstaller -i projectlibre 
     

    }
     
     
    pdfmod(){
	postinstaller -i pdfmod 
    }

   pdfsam(){

	postinstaller -i pdfsam 

    }

     
    scribus(){
	postinstaller -i scribus 
    }
     
    adia(){
	postinstaller -i dia 

    }
     
    gnu(){
	postinstaller -i gnumeric 
    }
     
    planner(){
	postinstaller -i planner 
    }
     
    vym(){
	postinstaller -i vym 

    }
     
    freemind(){
	postinstaller -i freemind 
    }


yEdt(){

wget -c -P/tmp/ http://www.yworks.com/products/yed/demo/yEd-3.9.2_setup.sh 2>&1 |sed -un 's_^.* \([0-9]\+%\).* \([0-9.]\+[GMKB]\).*_#Downloading: yEd  [\1]Speed:.........[\2B]_p' |zenity --progress --pulsate --auto-close --width 500

xterm -e 'sh /tmp/yEd-3.9.2_setup.sh'

if [ -f /opt/yEd/yEd ]; then
if [ $(echo $LANG | cut -b1-2) = "es" ]; then
su $user -c 'notify-send "PostInstallerF" "Completada la instalacion de yEd" -i "/usr/share/icons/pinguino.png" -t 5000'
else
su $user -c 'notify-send "PostInstallerF" "Has been completed installation of yEd" -i "/usr/share/icons/pinguino.png" -t 5000'
fi

else
zenity --info --title="PostInstallerF" --text="For some reason yEd not installed, please try again"
fi

    }


cmap(){

	postinstaller -i cmaptools 

    }

     
    anki(){
	postinstaller -i anki 

    }
     
     
    wine(){
	postinstaller -i wine -i cabextract -i winetricks 

    }
     
    virtualbox(){

if [ -f '/tmp/LATEST.TXT' ]; then
rm -f /tmp/LATEST.TXT
fi


lastest=$(curl -k http://download.virtualbox.org/virtualbox/LATEST.TXT | grep '[0-9]' | head -1)
wait ${!}

            if [ -f '/etc/yum.repos.d/virtualbox.repo' ]; then
postinstaller -i kernel-headers -i kernel-devel -i dkms -i gcc 

postinstaller -u

xterm -e 'dnf -y install --enablerepo=virtualbox VirtualBox-4.3'
xterm -e '/etc/init.d/vboxdrv setup'
cd /tmp/
wget -c  http://download.virtualbox.org/virtualbox/$lastest/Oracle_VM_VirtualBox_Extension_Pack-$lastest.vbox-extpack 2>&1 | sed -un 's_^.* \([0-9]\+%\).* \([0-9.]\+[GMKB]\).*_#Downloading: Virtual Box  [\1]Speed:.........[\2B]_p' | zenity --progress --pulsate --auto-close --width 500
wait ${!}
xterm -e "VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-$lastest.vbox-extpack"
usermod -a -G vboxusers $user
groups $user
zenity --info --title="PostInstallerF" --text="Para obtener soporte usb en Oracle Virtual Box es necesario reiniciar el sistema "
else
echo '[virtualbox]
name=Fedora $releasever - $basearch - VirtualBox
baseurl=http://download.virtualbox.org/virtualbox/rpm/fedora/$releasever/$basearch
enabled=1
gpgcheck=1
gpgkey=https://www.virtualbox.org/download/oracle_vbox.asc
skip_if_unavailable=1' >> /etc/yum.repos.d/virtualbox.repo

yum clean metadata

postinstaller -i kernel-headers -i kernel-devel -i dkms -i gcc 

postinstaller -u

xterm -e 'dnf -y install --enablerepo=virtualbox VirtualBox-4.3'
xterm -e '/etc/init.d/vboxdrv setup'
cd /tmp/
wget -c -P /tmp/  http://download.virtualbox.org/virtualbox/$lastest/Oracle_VM_VirtualBox_Extension_Pack-$lastest.vbox-extpack 2>&1 | sed -un 's_^.* \([0-9]\+%\).* \([0-9.]\+[GMKB]\).*_#Downloading: Virtual Box  [\1]Speed:.........[\2B]_p' | zenity --progress --pulsate --auto-close --width 500

wait ${!}
xterm -e "VBoxManage extpack install Oracle_VM_VirtualBox_Extension_Pack-$lastest.vbox-extpack"
usermod -a -G vboxusers $user
groups $user
zenity --info --title="PostInstallerF" --text="Para obtener soporte usb en Oracle Virtual Box es necesario reiniciar el sistema "
fi

if [ -f "/etc/yum.repos.d/virtualbox.repo" ] && [ -f /usr/bin/VirtualBox ]; then
rm -f /tmp/Oracle_VM_VirtualBox_Extension_Pack-*.vbox-extpack


if [ $(echo $LANG | cut -b1-2) = "es" ]; then
su $user -c 'notify-send "PostInstallerF" "Completada la instalacion de Oracle Virtual Box" -i "/usr/share/icons/pinguino.png" -t 5000'
else
su $user -c 'notify-send "PostInstallerF" "Has been completed installation of Oracle Virtual Box" -i "/usr/share/icons/pinguino.png" -t 5000'
fi
 else 
zenity --info --title="PostInstallerF" --text="For some reason Oracle Virtual Box not installed, please try again"
fi

    }
     
    play(){
	postinstaller -i wine -i cabextract 

$locainst http://rpm.playonlinux.com/playonlinux-yum-4-1.noarch.rpm 

postinstaller -u

	postinstaller -i playonlinux -i winetricks 


    }
     
    team(){
            $locainst http://www.teamviewer.com/download/teamviewer_linux.rpm | $localprogress

    }
     
    dropbox(){

if [ -f /etc/yum.repos.d/dropbox.repo ]; then
echo 'el repositorio esta incluido'
postinstaller -i nautilus-dropbox 
else
echo '[Dropbox]
name=Dropbox Repository
baseurl=http://linux.dropbox.com/fedora/$releasever/
gpgkey=https://linux.dropbox.com/fedora/rpm-public-key.asc
skip_if_unavailable=1' >> /etc/yum.repos.d/dropbox.repo
postinstaller -u
postinstaller -i nautilus-dropbox 
echo 'skip_if_unavailable=1' >> /etc/yum.repos.d/dropbox.repo
fi
            

    }
     

    mvcon(){

	postinstaller -i mvc 

    }
     

    qwinf(){

	postinstaller -i qwinff 
           
    }
     
    transcoder(){


	postinstaller -i transcoder 

    }
     
    Mobilmedia(){
	postinstaller -i mmc 

    }
     
            
    gtkPod(){
            
	postinstaller -i gtkpod 

    }
     
    easyTag(){
	postinstaller -i easytag 

    }
     
    avidemux(){
	postinstaller -i avidemux 

    }
     
    blender(){
	postinstaller -i blender 
    }


    tupapi(){
	postinstaller -i tupi 
    }

brlcad(){
if [[ $architecture = x86_64 ]]; then

$locainst http://sourceforge.net/projects/brlcad/files/BRL-CAD%20for%20Linux/7.24.2/brlcad-7.24.2-0.fedora.x86_64.rpm | $localprogress
else
$locainst http://sourceforge.net/projects/brlcad/files/BRL-CAD%20for%20Linux/7.24.2/brlcad-7.24.2-0.fedora.i386.rpm | $localprogress
fi


    }

     
    Sweet(){  
	postinstaller -i sweethome3d

    }
     
    libreCAD(){

	postinstaller -i librecad 

    }

freecad(){
	postinstaller -i freecad 

    }


Draft(){
$locainst http://dl-ak.solidworks.com/nonsecure/draftsight/V1R2.0/draftSight.rpm | $localprogress


    }

     
    inkscape(){
	postinstaller -i inkscape 

    }

     
    openshot(){
	postinstaller -i blender -i inkscape -i openshot 

    }


kden(){
	postinstaller -i kdenlive 

    }


lives(){
            

	postinstaller -i lives 


    }


imagination(){
	postinstaller -i imagination 

    }


deveDe(){
	postinstaller -i devede 

    }


dVDStyler(){
	postinstaller -i dvdstyler 

    }


ffaporama(){

	postinstaller -i ffdiaporama 


    }


wnk(){
            
	postinstaller -i wink 

    }


Virtual(){
	postinstaller -i darktable 

    }


GnomeSubtitles(){
	postinstaller -i gnome-subtitles 

    }


vlc(){
	postinstaller -i vlc 

    }

flix(){

	postinstaller -i pipelight 

    }


xbm(){

	postinstaller -i xbmc 

    }


clementine(){
	postinstaller -i qtwebkit -i clementine 


    }


spotify(){
	postinstaller -i spotify-client 

    }


sound(){
	postinstaller -i soundconverter 

    }


audacity(){
	postinstaller -i audacity 

    }


ocenaudio(){

if [[ $architecture = x86_64 ]]; then
            $locainst http://www.ocenaudio.com.br/downloads/ocenaudio64.rpm | $localprogress
else
$locainst http://www.ocenaudio.com.br/downloads/ocenaudio32.rpm | $localprogress
fi

    }


mix(){
	postinstaller -i mixxx 

    }



skype(){

if [! -f /etc/yum.repos.d/fedora-skype.repo ]; then

echo '[fedora-skype]
name=Skype for Fedora
baseurl=http://negativo17.org/repos/skype/fedora-$releasever/$basearch/
enabled=1
skip_if_unavailable=1
gpgkey=http://negativo17.org/repos/RPM-GPG-KEY-slaanesh
gpgcheck=1

[fedora-skype-source]
name=Skype for Fedora - Source
baseurl=http://negativo17.org/repos/skype/fedora-$releasever/SRPMS
enabled=0
skip_if_unavailable=1
gpgkey=http://negativo17.org/repos/RPM-GPG-KEY-slaanesh
gpgcheck=1' >> /etc/yum.repos.d/fedora-skype.repo

	yum clean metadata
	postinstaller -i skype 

else
	postinstaller -i skype 
fi


    }

turpial(){
	postinstaller -i turpial 

    }


gwibber(){
	postinstaller -i gwibber 

    }


bible(){
	postinstaller -i bibletime 

    }


tuxpaint(){
	postinstaller -i tuxpaint 


    }


Stellar(){
	postinstaller -i stellarium 

    }


celestia(){
	postinstaller -i celestia 

    }


gcompris(){
	postinstaller -i gcompris 
    }


tuxMath(){
	postinstaller -i tuxmath 

    }


tuxType(){
	postinstaller -i tuxtype2 

    }


childsplay(){
	postinstaller -i childsplay 

    }


scratch(){

	postinstaller -i scratch 
            
    }


ri(){
	postinstaller -i Ri-li 

    }


Frozen(){
	postinstaller -i frozen-bubble 

    }


Extreme(){
	postinstaller -i extremetuxracer 

    }


Super(){
	postinstaller -i supertuxkart 
    }



wormux(){
	postinstaller -i wormux 

    }


tremulous(){
	postinstaller -i tremulous 

    }


Methane(){
	postinstaller -i methane 

    }


pingus(){
	postinstaller -i pingus 

    }


hedgewars(){
	postinstaller -i hedgewars 

    }


glaxium(){
	postinstaller -i glaxium 

    }


amoebax(){
	postinstaller -i amoebax 

    }


AlienArena(){
	postinstaller -i alienarena 

    }


tORCS(){
	postinstaller -i torcs 

    }


flightGear(){
	postinstaller -i FlightGear 
    }


perfo(){

	postinstaller -i performous 


    }


stea(){


	postinstaller -i steam 

    }

Gnutella(){
	postinstaller -i gtk-gnutella 

    }


veOff(){

if [! -f /etc/yum.repos.d/home:gcala.repo ]; then

echo '[home_gcala]
name=gcala Home Project
type=rpm-md
baseurl=http://download.opensuse.org/repositories/home:/gcala/Fedora_$releasever/
gpgcheck=1
gpgkey=http://download.opensuse.org/repositories/home:/gcala/Fedora_$releasever/repodata/repomd.xml.key
enabled=1
skip_if_unavailable=1' >> /etc/yum.repos.d/home:gcala.repo

wait ${!}

	yum clean metadata
	postinstaller -i grooveoff 

else
	postinstaller -i grooveoff
fi

    }


wirefro(){

	postinstaller -i frostwire 

    }


uget(){
    	postinstaller -i uget 

    }


YumExtender(){
	postinstaller -i yumex 

    }


blue(){
	postinstaller -i blueman 

    }


Chrome(){
if [[ $architecture = x86_64 ]]; then
$locainst https://dl.google.com/linux/direct/google-chrome-stable_current_x86_64.rpm | $localprogress
else
$locainst https://dl.google.com/linux/direct/google-chrome-stable_current_i386.rpm | $localprogress
fi

    }


chromium(){
            
	postinstaller -i chromium 

    }


opera(){
	/usr/bin/postinstallerf/opera-installer 

    }


bleachBit(){
	postinstaller -i bleachbit 

    }


GnomeTweak(){
	postinstaller -i python-devel -i gnome-tweak-tool -i dconf-editor -i gconf-editor 

    }

mlibre(){
	postinstaller -i menulibre 

    }


bitdefender(){

if [[ $architecture = x86_64 ]]; then

$locainst http://download.bitdefender.com/repos/rpm/bitdefender/x86_64/bitdefender-scanner-7.6-3.x86_64.rpm | $localprogress


$locainst http://download.bitdefender.com/repos/rpm/bitdefender/x86_64/bitdefender-scanner-gui-1.0-3.x86_64.rpm | $localprogress
 else

$locainst http://download.bitdefender.com/repos/rpm/bitdefender/i586/bitdefender-scanner-7.6-3.i586.rpm | $localprogress


$locainst http://download.bitdefender.com/repos/rpm/bitdefender/i586/bitdefender-scanner-gui-1.0-3.i586.rpm | $localprogress

fi

    }


infosystem(){
            zenity --info --title="Informacion del Sistema" --text="Distribucion: 
$(cat /etc/fedora-release)\n\nKernel: $(uname -s -r)\n\nArchitecture: 
$(uname -i)\n\nRAM: $(cat /proc/meminfo | grep MemTotal | cut -c10-)\n\nGraphics Card: 
$(/sbin/lspci | grep VGA)\n\nGraphics Drivers: 
$(glxinfo | grep renderer)\n\nSound Card: 
$(lspci | grep -i audio)\n\nNetwork: 
$(lspci | grep -i network)\n\nUptime: 
$(uptime)" --ok-label="Ok"



    }


inex(){
     	postinstaller -i i-nex 

    }


alien(){
    	postinstaller -i alien 
    }


truetype(){
            
	postinstaller -i msttcorefonts 

    }
     
      
    ##
    ## Initialising PostInstallerF
    ##

    

    # Local install
    locainst='dnf -y install'

    # Especific rpm
    especific='dnf -y install'
   
    # Define Architecture
    architecture=$(uname -p)

    # Define version Fedora
    version=$(rpm -q --queryformat '%{VERSION}\n' fedora-release)

    # Progress
    progress='/usr/bin/postinstallerf/progress'

    # Local Progress
    localprogress='/usr/bin/postinstallerf/local-pro'
     
    #initialising post-yum job list
    postYum=""
     
    #initialising post-yum job list
    postRoot="exit; "
     
    #initialising notification
    user=$(loginctl show-session $XDG_SESSION_ID | grep 'Name' | cut -d= -f2 | tail -n 1)

    #variables deteccion JRE o JDK java Oracle
    versionjava=$(rpm -qi jre | sed -n '2p' | cut -b1-40)

if [ -f /usr/java/latest/release ]; then
    versionjkd=$(head -1 /usr/java/latest/release)
fi


# running PostInstallerF...
    generateInstallMenu
    chooseInstalls
    
    if test ${#postYum} -gt 0; then
            echo "Runing post install scripts..."
            echo $postYum | sh -
    fi
    if test ${#postRoot} -gt 6; then
            echo "Runing post root scripts..."
            echo $postRoot | sh -
    fi
     
    #if there was something to do
    if test ${#choice} -gt 0; then
       echo 'todo terminado'
       cleanlist	 
                 
    fi

     
    exit 0
