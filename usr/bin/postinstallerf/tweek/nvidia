#!/bin/bash

source /usr/bin/postinstallerf/pid


    # Local Progress
    localprogress='/usr/bin/postinstallerf/local-pro'

    # Progress
    progress='/usr/bin/postinstallerf/progress'

    # Define version Fedora
    version=$(rpm -q --queryformat '%{VERSION}\n' fedora-release)

# called whenever anything needs inform all task
fnotify() {
dist=$(uname -a | grep -oe 'MANJARO' -e 'Ubuntu' -e 'Debian')

if [ -f /etc/fedora-release ]; then
if [ $(rpm -qa $VGA $VGA3 $VGA4 $VGA7 $VGA8 | grep -c $VGA $VGA3 $VGA4 $VGA7 $VGA8) -gt 0 ]; then
    body="$VGA $VGA3 $VGA4 $VGA7 $VGA8 drivers is installed
please restart"
else
    body="Sorry $VGA $VGA3 $VGA4 $VGA7 $VGA8 driver is not installed"
fi

elif [ "$dist" = Debian ] || [ "$dist" = Ubuntu ]; then
body="$VGA $VGA3 $VGA4 $VGA7 $VGA8 is installed"

elif [ "$dist" = MANJARO ]; then 
body="$VGA $VGA3 $VGA4 $VGA7 $VGA8 is installed"
fi


	/usr/bin/paplay /usr/bin/postinstallerf/sound21.ogg &

    # Usage: notify "title" "description" [options to pass to send-notify"
    title="Finished"
#    body="$OPTARG is installed"
    shift 2
    opts="$*"

if [ "$dist" = Debian ] || [ "$dist" = Ubuntu ]; then
notify-send "$title" "$body" -i "/usr/share/icons/pinguino.png" -t 10000
else
if [ "$(id -u)" -eq 0 ]; then    
    # Send messages to users listed by the 'users' command, but only once
    # Maybe sh has a better way of doing set operations, but this works:
    SENT=""
    for USER in $(users); do
        case $SENT in
            "$USER") ;;
            *" $USER") ;;
            "$USER "*) ;;
            *" $USER "*) ;;
            # use 'su USER' to send the message
            *) SENT="$SENT $USER"; su $USER -c "notify-send $opts \"$title\" \"$body\" -i "/usr/share/icons/pinguino.png" -t 10000" ;;
        esac
    done
else
notify-send "$title" "$body" -i "/usr/share/icons/pinguino.png" -t 10000
fi 
  fi

}


PKGSINSTALLED=$(rpm -qa akmod-nvidia*)
	if [ -n "$PKGSINSTALLED" ]; then

status='INSTALLED'
tarea='Remove'
else
status='NO INSTALLED'
tarea='Install'                   
fi

Comment='<span size="xx-large">Nvidia propietary drivers</span>'

yad --title="PostInstallerF - Nvidia propietary drivers" \
--center \
--window-icon="/usr/share/icons/acciones/topicon.png" \
--image="/usr/share/icons/acciones/nvidia-logo.png" --image-on-top \
--width=800 --height=500 \
--text="$Comment
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
Installation of Propietary NVIDIA drivers, Experimental"  \
--button="Status: $status:3" --button="$tarea:0" --button="Close:1" 

ret=$?

if [ $ret -eq 0 ]; then 

if [ -f /tmp/nvdia.txt ]; then
rm -f /tmp/nvdia.txt
elif [ -f /tmp/lastest_nvdia.txt ]; then
rm -f /tmp/lastest_nvdia.txt
elif [ -f /tmp/targra2.txt ]; then
rm -f /tmp/targra2.txt
fi

if [ $tarea = Install ]; then

if [ $(rpm -qa rpmfusion-free-release | grep -c rpmfusion-free-release) -gt 0 ] && [ $(rpm -qa rpmfusion-nonfree-release | grep -c rpmfusion-nonfree-release) -gt 0 ]; then
echo 'installed rpmfusion free and nonfree repository'
else
pkexec dnf -y install --nogpgcheck http://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$version.noarch.rpm http://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$version.noarch.rpm | $localprogress    
fi

if [ $(rpm -qa kernel-devel | grep -c kernel-devel) -gt 0 ]; then
echo 'installed kernel-devel'
else
postinstaller -i kernel-devel
fi

targra=$(lspci | grep -i nvidia | awk -F'[' '{print $2}' | awk -F']' '{print $1}' | tee -a /tmp/targra2.txt)

wait ${!}


# Check if user really has a nvidia video card
	VGA=$(lspci | grep -i 'nvidia') > /dev/null
	if [ "$?" != 0 ]; then
echo 'No nVidia card detected'
zenity --info --title="PostInstallerF" --text="No nVidia card detected"
exit
else
echo 'nVidia card detected'
fi

	# HERE INSTALLATION


foo8=$(wget --no-check-certificate -q ftp://download.nvidia.com/XFree86/Linux-x86_64/290.10/README/supportedchips.html -O - | grep -e 'GeForce 6' -e 'GeForce 7' -e 'GeForce 8' -e 'GeForce 2' -e 'GeForce 3' -e 'GeForce 4' -e 'GeForce 5' -e 'GeForce FX' -e 'GeForce4' -e 'GeForce2' | sed '1d' | awk -F'<td>' '{print $2}' | awk -F'</td>' '{print $1}' | tee -a /tmp/lastest_nvdia.txt)

wait ${!}

VGA=$(grep "$targra" /tmp/lastest_nvdia.txt) > /dev/null
	if [ "$?" != 0 ]; then
echo 'No nVidia card compatible'
rm -f /tmp/nvdia.txt
rm -f /tmp/lastest_nvdia.txt
rm -f /tmp/targra2.txt
zenity --info --title="PostInstallerF" --text="No nVidia card compatible"
  exit
else
echo 'ya la hiciste rey'
zenity --question --title="Do you want install Nvidia Drivers?" --text="Do you want install Nvidia Drivers?

Nvidia does not carry the accelerated pace of updates compared to the kernel and xorg
Remember this funtion is experimental" --ok-label "Yes" --cancel-label "No"

if [ $? -eq 0 ]; then

VGA3=$(grep 'GeForce FX' /tmp/targra2.txt) > /dev/null
	if [ "$?" = 0 ]; then
echo '173.14.xx driver'

postinstaller -u

postinstaller -i akmod-nvidia-173xx 
pkexec dnf -y install xorg-x11-drv-nvidia-173xx-libs.i686 | $localprogress


pkexec xterm -e 'nvidia-xconfig'

rm -f /tmp/nvdia.txt
rm -f /tmp/lastest_nvdia.txt
rm -f /tmp/targra2.txt

fnotify
fi


VGA4=$(grep -e 'GeForce4' -e 'GeForce2' /tmp/targra2.txt) > /dev/null
	if [ "$?" = 0 ]; then
echo '96.43.xx driver'

postinstaller -u

postinstaller -i akmod-nvidia-96xx 
pkexec dnf -y install xorg-x11-drv-nvidia-96xx-libs.i686 | $localprogress


pkexec xterm -e 'nvidia-xconfig'

rm -f /tmp/nvdia.txt
rm -f /tmp/lastest_nvdia.txt
rm -f /tmp/targra2.txt

fnotify
fi


VGA7=$(grep -e 'GeForce 2' -e 'GeForce 3' -e 'GeForce 4' -e 'GeForce 5' -e 'GeForce 6' -e 'GeForce 7' /tmp/targra2.txt) > /dev/null
	if [ "$?" = 0 ]; then
echo 'Series 304'

postinstaller -u

postinstaller -i akmod-nvidia-304xx 
# pkexec yum -y install xorg-x11-drv-nvidia-304xx-libs.i686 | $localprogress

pkexec xterm -e 'nvidia-xconfig'

rm -f /tmp/nvdia.txt
rm -f /tmp/lastest_nvdia.txt
rm -f /tmp/targra2.txt

fnotify
fi



VGA8=$(grep -e 'GeForce 8' -e 'GeForce 9' /tmp/targra2.txt) > /dev/null
	if [ "$?" = 0 ]; then
echo 'Nuevos controladores'
postinstaller -u

postinstaller -i akmod-nvidia 
pkexec dnf -y install xorg-x11-drv-nvidia-libs.i686 | $localprogress

pkexec xterm -e 'nvidia-xconfig'

rm -f /tmp/nvdia.txt
rm -f /tmp/lastest_nvdia.txt
rm -f /tmp/targra2.txt

fnotify
fi
  fi
fi

elif [ $tarea = Remove ]; then
pkexec dnf -y erase xorg-x11-drv-nvidia\* | $localprogress
fi

fi

# Clean lck 
if [ "$(id -u)" -eq 0 ]; then
rm -f /tmp/nvidia..lck
else
cat /dev/null > /tmp/nvidia..lck
fi
