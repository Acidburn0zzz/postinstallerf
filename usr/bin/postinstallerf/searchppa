#!/bin/bash

#Define Architecture
architecture=$(uname -m)

# Clean package info ppa
cleanppa() {
if [ "$(id -u)" -eq 0 ]; then
rm -f /tmp/summary-group
rm -f /tmp/*.lck
rm -f /tmp/ppalist
rm -f /tmp/ppa-url-tmp
rm -f /tmp/gress
rm -f /tmp/$BUSCA_I.temp
else
cat /dev/null > /tmp/summary-group
cat /dev/null > /tmp/ppalist
cat /dev/null > /tmp/ppa-url-tmp
cat /dev/null > /tmp/gress
cat /dev/null > /tmp/$BUSCA_I.temp
fi
}

ubugres() {

tee -a /tmp/ppaprogress | stdbuf -oL sed -n 's/^/# /p' | yad --progress \
	--title="PostInstallerF - Updating Repositories" \
	--center \
	--image="/usr/share/icons/acciones/uppa.png" --image-on-top \
	--window-icon="/usr/share/icons/acciones/topicon.png" \
	--text="Please wait.." \
	--width=500 --height=200 \
	--justify=fill \
	--pulsate   \
	--auto-close  \
	--no-buttons  

}


purgres() {

tee -a /tmp/purgeprogress | stdbuf -oL sed -n 's/^/# /p' | yad --progress \
	--title="PostInstallerF - Purging $BUSCA_I" \
	--center \
	--image="/usr/share/icons/trashito.png" --image-on-top \
	--window-icon="/usr/share/icons/acciones/topicon.png" \
	--text="Please wait.." \
	--width=500 --height=200 \
	--justify=fill \
	--pulsate   \
	--auto-close  \
	--no-buttons
}



cleanppa
relu=$( lsb_release -r | awk '{print $2}')
corel=$( lsb_release -c | awk '{print $2}')


grep -RoPish "ppa.launchpad.net/[^/]+/[^/ ]+" /etc/apt | sort -u | sed -r 's/\.[^/]+\//:/' | tee -a /tmp/ppalist

BUSCA_I=$(yad --entry --center --title="PPA search." --window-icon="/usr/share/icons/acciones/topicon.png" --width=350 --text="Type in as many keywords as you want to search for." --image=/usr/share/icons/acciones/ppa-search.png --image-on-top)

if [ "$?" != 0 ]; then
cleanppa
exit
fi

mojito3=$(curl -k https://launchpad.net/+search?field.text=$BUSCA_I | grep '+archive/' | grep "$BUSCA_I" | awk -F'<a href="' '{print $2}' | awk -F'">' '{print $1}' | tr ' ' '\n' | tee -a /tmp/ppa-url-tmp)

mojito5=$(curl -k https://launchpad.net/+search?field.text=$BUSCA_I | grep '+archive/' | grep "ppa" | awk -F'<a href="' '{print $2}' | awk -F'">' '{print $1}' | tr ' ' '\n' | tee -a /tmp/ppa-url-tmp)

mojito=$(curl -k https://launchpad.net/ubuntu/+ppas?name_filter=$BUSCA_I | grep -e "$BUSCA_I" -e "$corel" -e "$relu" | grep '+archive/' | awk -F'<td><a href="/~' '{print $2}' | awk -F'">' '{print $1}' | tr ' ' '\n' | tee -a /tmp/ppa-url-tmp)

wait ${!}

sed -i '/+build/d' /tmp/ppa-url-tmp
sed -i '/+test/d' /tmp/ppa-url-tmp
sed -i '/+packages/d' /tmp/ppa-url-tmp
sed -i '/+builds/d' /tmp/ppa-url-tmp
sed -i '/+Error/d' /tmp/ppa-url-tmp
sed -i '/+listing-archive-extra/d' /tmp/ppa-url-tmp
sed -i '/+index?/d' /tmp/ppa-url-tmp

sed -ni '/^https/p' /tmp/ppa-url-tmp

sed -i '#https://launchpad.net/#!d' /tmp/ppa-url-tmp
sed '$!N; /^\(.*\)\n\1$/!P; D' /tmp/ppa-url-tmp
sed -i '/^\s*$/d' /tmp/ppa-url-tmp

wait ${!}
/usr/bin/postinstallerf/notifier-ppa &


# refine search

if [ $(tr -d "\r\n" < /tmp/ppa-url-tmp | wc -c) -eq 0 ]; then
echo "None ppa found, then searching all"
mojito2=$(curl -k https://launchpad.net/ubuntu/+ppas?name_filter=$BUSCA_I | grep '+archive/' | awk -F'<td><a href="/~' '{print $2}' | awk -F'">' '{print $1}' | tr ' ' '\n' | tee -a /tmp/ppa-url-tmp)
sed -i '/+build/d' /tmp/ppa-url-tmp
sed -i '/+test/d' /tmp/ppa-url-tmp
sed -i '/+packages/d' /tmp/ppa-url-tmp
sed -i '/+builds/d' /tmp/ppa-url-tmp
sed -i '/+Error/d' /tmp/ppa-url-tmp
sed -i '/+listing-archive-extra/d' /tmp/ppa-url-tmp
sed -ni '/^https/p' /tmp/ppa-url-tmp
sed '$!N; /^\(.*\)\n\1$/!P; D' /tmp/ppa-url-tmp
sed -i '/^\s*$/d' /tmp/ppa-url-tmp
 fi


# checking results

if [ $(tr -d "\r\n" < /tmp/ppa-url-tmp | wc -c) -eq 0 ]; then
echo "None ppa found"
ps aux | grep notify | awk '{print $2}' | xargs kill -9
yad --info --window-icon="/usr/share/icons/acciones/topicon.png" --title="PostInstallerF" --text="Sorry
None ppa found"
cleanppa
exit
 fi


file="/tmp/ppa-url-tmp"
while IFS= read -r line; do
        # display $line or do somthing with $line

cod=$(curl -s -k --head -w %{http_code} $line -o /dev/null)

curl -k -o /tmp/$BUSCA_I.temp $line

#if [ $(tr -d "\r\n" < /tmp/$BUSCA_I.temp | wc -c) -eq 0 ]; then
#echo "0 Sized and completely empty"
#exit
# fi

# if [ $(cat /tmp/$BUSCA_I.temp | grep -c "$relu") -gt 0 ] || [ $(cat /tmp/$BUSCA_I.temp | grep -c "$corel") -gt 0 ] || [ $(cat /tmp/$BUSCA_I.temp | grep -c "$BUSCA_I") -gt 0 ] || [ $(cat /tmp/$BUSCA_I.temp | grep -c '/ppa') -gt 0 ] && [ "$cod" -eq 200 ]; then

if [ "$cod" -eq 200 ]; then

title=$(cat /tmp/$BUSCA_I.temp | grep -e '<title>'  | awk -F '<title>' '{print $2}' | awk -F '</title>' '{print $1}')


description=$(cat /tmp/$BUSCA_I.temp | grep -e 'content='  | awk -F 'content="' '{print $2}' | awk -F '.' '{print $1}' | tr -d '/>' | tr -d '"' | sed -e :a -e N -e 's/\n/ /' -e ta | sed 's/^/"/' | sed 's/$/"/') 


support=$(cat /tmp/$BUSCA_I.temp | grep -e '<option value='  | grep [0-9] | awk -F '(' '{print $2}' | awk -F ')' '{print $1}' | sed -e :a -e N -e 's/\n/ /' -e ta | awk '{print $1, $2, $3}' | sed 's/^/"/' | sed 's/$/"/' )


ppa=$(echo $line | sed 's\https://launchpad.net/\\g' | sed 's:'/'+archive::g' | sed 's:'/'ubuntu::g' | tr -d '~' | sed 's/^/ppa:/')


if [ $(cat /tmp/ppalist | grep -c $ppa) -gt 0 ]; then
statusp='PPA INSTALLED'
else
statusp='PPA NO INSTALLED'
fi

echo "=> $line" 

lines=("${lines[@]}" "FALSE" "$title" "$description" "$support" "$ppa" "$statusp")
#fi
fi
	
done < "$file" 

wait ${!}

ps aux | grep notify | awk '{print $2}' | xargs kill -9

CHECK=$(yad --list --radiolist --center --title="PostInstallerF - PPA Install" --text="You've searched for $BUSCA_I" --width=800 --height=500 --window-icon="/usr/share/icons/acciones/topicon.png" --image=/usr/share/icons/acciones/ppa-search.png --image-on-top --column=In --column=Name --column=Description --column=Compatible --column=PPA --column='PPA STATUS' "${lines[@]}" --button="Install:0" --button="Purge:1" --button="Remove PPA:2" --button="Close:3") 

ret=$?

CHECK_INST=$(echo $CHECK | awk -F'|' '{print $5}')
verifyppa=$(echo $CHECK | awk -F'|' '{print $6}')

if [ $ret -eq 0 ]; then

if [[ $verifyppa = 'PPA INSTALLED' ]]; then
postinstaller -i $BUSCA_I
if [ $(dpkg-query -Wf '${db:Status-abbrev}' $BUSCA_I) = ii ]; then
echo 'fine'
else
# Search package, case the name in search ppa doesn't correct.
 
if [ $architecture = x86_64 ]; then

	RES_BUSCA_I=$(pkcon search name $BUSCA_I | grep -ve '===' -e 'i386' | grep $BUSCA_I | uniq -c )

else

	RES_BUSCA_I=$(pkcon search name $BUSCA_I | grep -ve '===' -e 'x86_64' | grep $BUSCA_I | uniq -c )
fi
       
	CHECK=$(yad --list --radiolist --center --title="Package installation." --text="Select package to be installed" --width=600 --height=500 --window-icon="/usr/share/icons/acciones/topicon.png" --image=/usr/share/icons/acciones/searchpackage.png --image-on-top --column=In --column=Status --column=Package $RES_BUSCA_I) 
	
CHECK_INST=$(echo $CHECK | awk -F'|' '{print $3}' | awk -F'-[0-9]' '{print $1}')
	
/usr/bin/postinstaller -n $CHECK_INST
#end search
fi
else
pkexec apt-add-repository -y $CHECK_INST
pkexec apt-get -y update | ubugres
postinstaller -i $BUSCA_I
if [ $(dpkg-query -Wf '${db:Status-abbrev}' $BUSCA_I) = ii ]; then
echo 'fine'
else

# Search package, case the name in search ppa doesn't correct.
 
if [ $architecture = x86_64 ]; then

	RES_BUSCA_I=$(pkcon search name $BUSCA_I | grep -ve '===' -e 'i386' | grep $BUSCA_I | uniq -c )

else

	RES_BUSCA_I=$(pkcon search name $BUSCA_I | grep -ve '===' -e 'x86_64' | grep $BUSCA_I | uniq -c )
fi
       
	CHECK=$(yad --list --radiolist --center --title="Package installation." --text="Select package to be installed" --width=600 --height=500 --window-icon="/usr/share/icons/acciones/topicon.png" --image=/usr/share/icons/acciones/searchpackage.png --image-on-top --column=In --column=Status --column=Package $RES_BUSCA_I) 
	
CHECK_INST=$(echo $CHECK | awk -F'|' '{print $3}' | awk -F'-[0-9]' '{print $1}')
	
/usr/bin/postinstaller -n $CHECK_INST
#end search
fi
fi

elif [ $ret -eq 1 ]; then
if [[ $verifyppa = 'PPA INSTALLED' ]]; then
pkexec ppa-purge -y $CHECK_INST | purgres
pkexec apt-get -y update | ubugres
else
yad --info --title="PPA no installed" --center --image="/usr/share/icons/acciones/summary.png" --image-on-top --window-icon="/usr/share/icons/acciones/topicon.png" --text="This PPA isn't installed" --width=350 --height=350
fi

elif [ $ret -eq 2 ]; then
pkexec add-apt-repository --remove -y $CHECK_INST
pkexec apt-get -y update | ubugres

if [ $(dpkg-query -Wf '${db:Status-abbrev}' $BUSCA_I) = ii ]; then
zenity --question --title="Remove $BUSCA_I" --text="Do you want remove also $BUSCA_I?" --ok-label "Yes" --cancel-label "No"

if [ $? -eq 0 ]; then
postinstaller -e $BUSCA_I
fi
  fi

elif [ $ret -eq 3 ]; then
cleanppa
exit
fi

#end
cleanppa
